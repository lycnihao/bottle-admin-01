{"remainingRequest":"F:\\个人git项目\\couldr-user\\node_modules\\babel-loader\\lib\\index.js!F:\\个人git项目\\couldr-user\\node_modules\\eslint-loader\\index.js??ref--13-0!F:\\个人git项目\\couldr-user\\src\\store\\modules\\permission.js","dependencies":[{"path":"F:\\个人git项目\\couldr-user\\src\\store\\modules\\permission.js","mtime":1583417156409},{"path":"F:\\个人git项目\\couldr-user\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\个人git项目\\couldr-user\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"F:\\个人git项目\\couldr-user\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5jbHVkZXMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLmluY2x1ZGVzIjsKaW1wb3J0IHsgYXN5bmNSb3V0ZXJNYXAsIGNvbnN0YW50Um91dGVyTWFwIH0gZnJvbSAnQC9jb25maWcvcm91dGVyLmNvbmZpZyc7Ci8qKg0KICog6L+H5ruk6LSm5oi35piv5ZCm5oul5pyJ5p+Q5LiA5Liq5p2D6ZmQ77yM5bm25bCG6I+c5Y2V5LuO5Yqg6L295YiX6KGo56e76ZmkDQogKg0KICogQHBhcmFtIHBlcm1pc3Npb24NCiAqIEBwYXJhbSByb3V0ZQ0KICogQHJldHVybnMge2Jvb2xlYW59DQogKi8KCmZ1bmN0aW9uIGhhc1Blcm1pc3Npb24ocGVybWlzc2lvbiwgcm91dGUpIHsKICBpZiAocm91dGUubWV0YSAmJiByb3V0ZS5tZXRhLnBlcm1pc3Npb24pIHsKICAgIHZhciBmbGFnID0gZmFsc2U7CgogICAgZm9yICh2YXIgaSA9IDAsIGxlbiA9IHBlcm1pc3Npb24ubGVuZ3RoOyBpIDwgbGVuOyBpKyspIHsKICAgICAgZmxhZyA9IHJvdXRlLm1ldGEucGVybWlzc2lvbi5pbmNsdWRlcyhwZXJtaXNzaW9uW2ldKTsKCiAgICAgIGlmIChmbGFnKSB7CiAgICAgICAgcmV0dXJuIHRydWU7CiAgICAgIH0KICAgIH0KCiAgICByZXR1cm4gZmFsc2U7CiAgfQoKICByZXR1cm4gdHJ1ZTsKfQovKioNCiAqIOWNlei0puaIt+WkmuinkuiJsuaXtu+8jOS9v+eUqOivpeaWueazleWPr+i/h+a7pOinkuiJsuS4jeWtmOWcqOeahOiPnOWNlQ0KICoNCiAqIEBwYXJhbSByb2xlcw0KICogQHBhcmFtIHJvdXRlDQogKiBAcmV0dXJucyB7Kn0NCiAqLwovLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUKCgpmdW5jdGlvbiBoYXNSb2xlKHJvbGVzLCByb3V0ZSkgewogIGlmIChyb3V0ZS5tZXRhICYmIHJvdXRlLm1ldGEucm9sZXMpIHsKICAgIHJldHVybiByb3V0ZS5tZXRhLnJvbGVzLmluY2x1ZGVzKHJvbGVzLmlkKTsKICB9IGVsc2UgewogICAgcmV0dXJuIHRydWU7CiAgfQp9CgpmdW5jdGlvbiBmaWx0ZXJBc3luY1JvdXRlcihyb3V0ZXJNYXAsIHJvbGVzKSB7CiAgdmFyIGFjY2Vzc2VkUm91dGVycyA9IHJvdXRlck1hcC5maWx0ZXIoZnVuY3Rpb24gKHJvdXRlKSB7CiAgICBpZiAoaGFzUGVybWlzc2lvbihyb2xlcy5wZXJtaXNzaW9uTGlzdCwgcm91dGUpKSB7CiAgICAgIGlmIChyb3V0ZS5jaGlsZHJlbiAmJiByb3V0ZS5jaGlsZHJlbi5sZW5ndGgpIHsKICAgICAgICByb3V0ZS5jaGlsZHJlbiA9IGZpbHRlckFzeW5jUm91dGVyKHJvdXRlLmNoaWxkcmVuLCByb2xlcyk7CiAgICAgIH0KCiAgICAgIHJldHVybiB0cnVlOwogICAgfQoKICAgIHJldHVybiBmYWxzZTsKICB9KTsKICByZXR1cm4gYWNjZXNzZWRSb3V0ZXJzOwp9Cgp2YXIgcGVybWlzc2lvbiA9IHsKICBzdGF0ZTogewogICAgcm91dGVyczogY29uc3RhbnRSb3V0ZXJNYXAsCiAgICBhZGRSb3V0ZXJzOiBbXQogIH0sCiAgbXV0YXRpb25zOiB7CiAgICBTRVRfUk9VVEVSUzogZnVuY3Rpb24gU0VUX1JPVVRFUlMoc3RhdGUsIHJvdXRlcnMpIHsKICAgICAgc3RhdGUuYWRkUm91dGVycyA9IHJvdXRlcnM7CiAgICAgIHN0YXRlLnJvdXRlcnMgPSBjb25zdGFudFJvdXRlck1hcC5jb25jYXQocm91dGVycyk7CiAgICB9CiAgfSwKICBhY3Rpb25zOiB7CiAgICBHZW5lcmF0ZVJvdXRlczogZnVuY3Rpb24gR2VuZXJhdGVSb3V0ZXMoX3JlZiwgZGF0YSkgewogICAgICB2YXIgY29tbWl0ID0gX3JlZi5jb21taXQ7CiAgICAgIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSkgewogICAgICAgIHZhciByb2xlcyA9IGRhdGEucm9sZXM7CiAgICAgICAgdmFyIGFjY2Vzc2VkUm91dGVycyA9IGZpbHRlckFzeW5jUm91dGVyKGFzeW5jUm91dGVyTWFwLCByb2xlcyk7CiAgICAgICAgY29tbWl0KCdTRVRfUk9VVEVSUycsIGFjY2Vzc2VkUm91dGVycyk7CiAgICAgICAgcmVzb2x2ZSgpOwogICAgICB9KTsKICAgIH0KICB9Cn07CmV4cG9ydCBkZWZhdWx0IHBlcm1pc3Npb247"},{"version":3,"sources":["F:/个人git项目/couldr-user/src/store/modules/permission.js"],"names":["asyncRouterMap","constantRouterMap","hasPermission","permission","route","meta","flag","i","len","length","includes","hasRole","roles","id","filterAsyncRouter","routerMap","accessedRouters","filter","permissionList","children","state","routers","addRouters","mutations","SET_ROUTERS","concat","actions","GenerateRoutes","data","commit","Promise","resolve"],"mappings":";;;;;AAAA,SAASA,cAAT,EAAyBC,iBAAzB,QAAkD,wBAAlD;AAEA;;;;;;;;AAOA,SAASC,aAAT,CAAwBC,UAAxB,EAAoCC,KAApC,EAA2C;AACzC,MAAIA,KAAK,CAACC,IAAN,IAAcD,KAAK,CAACC,IAAN,CAAWF,UAA7B,EAAyC;AACvC,QAAIG,IAAI,GAAG,KAAX;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAR,EAAWC,GAAG,GAAGL,UAAU,CAACM,MAAjC,EAAyCF,CAAC,GAAGC,GAA7C,EAAkDD,CAAC,EAAnD,EAAuD;AACrDD,MAAAA,IAAI,GAAGF,KAAK,CAACC,IAAN,CAAWF,UAAX,CAAsBO,QAAtB,CAA+BP,UAAU,CAACI,CAAD,CAAzC,CAAP;;AACA,UAAID,IAAJ,EAAU;AACR,eAAO,IAAP;AACD;AACF;;AACD,WAAO,KAAP;AACD;;AACD,SAAO,IAAP;AACD;AAED;;;;;;;AAOA;;;AACA,SAASK,OAAT,CAAiBC,KAAjB,EAAwBR,KAAxB,EAA+B;AAC7B,MAAIA,KAAK,CAACC,IAAN,IAAcD,KAAK,CAACC,IAAN,CAAWO,KAA7B,EAAoC;AAClC,WAAOR,KAAK,CAACC,IAAN,CAAWO,KAAX,CAAiBF,QAAjB,CAA0BE,KAAK,CAACC,EAAhC,CAAP;AACD,GAFD,MAEO;AACL,WAAO,IAAP;AACD;AACF;;AAED,SAASC,iBAAT,CAA4BC,SAA5B,EAAuCH,KAAvC,EAA8C;AAC5C,MAAMI,eAAe,GAAGD,SAAS,CAACE,MAAV,CAAiB,UAAAb,KAAK,EAAI;AAChD,QAAIF,aAAa,CAACU,KAAK,CAACM,cAAP,EAAuBd,KAAvB,CAAjB,EAAgD;AAC9C,UAAIA,KAAK,CAACe,QAAN,IAAkBf,KAAK,CAACe,QAAN,CAAeV,MAArC,EAA6C;AAC3CL,QAAAA,KAAK,CAACe,QAAN,GAAiBL,iBAAiB,CAACV,KAAK,CAACe,QAAP,EAAiBP,KAAjB,CAAlC;AACD;;AACD,aAAO,IAAP;AACD;;AACD,WAAO,KAAP;AACD,GARuB,CAAxB;AASA,SAAOI,eAAP;AACD;;AAED,IAAMb,UAAU,GAAG;AACjBiB,EAAAA,KAAK,EAAE;AACLC,IAAAA,OAAO,EAAEpB,iBADJ;AAELqB,IAAAA,UAAU,EAAE;AAFP,GADU;AAKjBC,EAAAA,SAAS,EAAE;AACTC,IAAAA,WAAW,EAAE,qBAACJ,KAAD,EAAQC,OAAR,EAAoB;AAC/BD,MAAAA,KAAK,CAACE,UAAN,GAAmBD,OAAnB;AACAD,MAAAA,KAAK,CAACC,OAAN,GAAgBpB,iBAAiB,CAACwB,MAAlB,CAAyBJ,OAAzB,CAAhB;AACD;AAJQ,GALM;AAWjBK,EAAAA,OAAO,EAAE;AACPC,IAAAA,cADO,gCACqBC,IADrB,EAC2B;AAAA,UAAhBC,MAAgB,QAAhBA,MAAgB;AAChC,aAAO,IAAIC,OAAJ,CAAY,UAAAC,OAAO,EAAI;AAAA,YACpBnB,KADoB,GACVgB,IADU,CACpBhB,KADoB;AAE5B,YAAMI,eAAe,GAAGF,iBAAiB,CAACd,cAAD,EAAiBY,KAAjB,CAAzC;AACAiB,QAAAA,MAAM,CAAC,aAAD,EAAgBb,eAAhB,CAAN;AACAe,QAAAA,OAAO;AACR,OALM,CAAP;AAMD;AARM;AAXQ,CAAnB;AAuBA,eAAe5B,UAAf","sourcesContent":["import { asyncRouterMap, constantRouterMap } from '@/config/router.config'\r\n\r\n/**\r\n * 过滤账户是否拥有某一个权限，并将菜单从加载列表移除\r\n *\r\n * @param permission\r\n * @param route\r\n * @returns {boolean}\r\n */\r\nfunction hasPermission (permission, route) {\r\n  if (route.meta && route.meta.permission) {\r\n    let flag = false\r\n    for (let i = 0, len = permission.length; i < len; i++) {\r\n      flag = route.meta.permission.includes(permission[i])\r\n      if (flag) {\r\n        return true\r\n      }\r\n    }\r\n    return false\r\n  }\r\n  return true\r\n}\r\n\r\n/**\r\n * 单账户多角色时，使用该方法可过滤角色不存在的菜单\r\n *\r\n * @param roles\r\n * @param route\r\n * @returns {*}\r\n */\r\n// eslint-disable-next-line\r\nfunction hasRole(roles, route) {\r\n  if (route.meta && route.meta.roles) {\r\n    return route.meta.roles.includes(roles.id)\r\n  } else {\r\n    return true\r\n  }\r\n}\r\n\r\nfunction filterAsyncRouter (routerMap, roles) {\r\n  const accessedRouters = routerMap.filter(route => {\r\n    if (hasPermission(roles.permissionList, route)) {\r\n      if (route.children && route.children.length) {\r\n        route.children = filterAsyncRouter(route.children, roles)\r\n      }\r\n      return true\r\n    }\r\n    return false\r\n  })\r\n  return accessedRouters\r\n}\r\n\r\nconst permission = {\r\n  state: {\r\n    routers: constantRouterMap,\r\n    addRouters: []\r\n  },\r\n  mutations: {\r\n    SET_ROUTERS: (state, routers) => {\r\n      state.addRouters = routers\r\n      state.routers = constantRouterMap.concat(routers)\r\n    }\r\n  },\r\n  actions: {\r\n    GenerateRoutes ({ commit }, data) {\r\n      return new Promise(resolve => {\r\n        const { roles } = data\r\n        const accessedRouters = filterAsyncRouter(asyncRouterMap, roles)\r\n        commit('SET_ROUTERS', accessedRouters)\r\n        resolve()\r\n      })\r\n    }\r\n  }\r\n}\r\n\r\nexport default permission\r\n"]}]}