{"remainingRequest":"F:\\个人git项目\\couldr-user\\node_modules\\babel-loader\\lib\\index.js!F:\\个人git项目\\couldr-user\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!F:\\个人git项目\\couldr-user\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\个人git项目\\couldr-user\\src\\components\\Upload\\FilePondUpload.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\个人git项目\\couldr-user\\src\\components\\Upload\\FilePondUpload.vue","mtime":1584361265564},{"path":"F:\\个人git项目\\couldr-user\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\个人git项目\\couldr-user\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"F:\\个人git项目\\couldr-user\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\个人git项目\\couldr-user\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZSI7CmltcG9ydCBfb2JqZWN0U3ByZWFkIGZyb20gIkY6XFxcdTRFMkFcdTRFQkFnaXRcdTk4NzlcdTc2RUVcXGNvdWxkci11c2VyXFxub2RlX21vZHVsZXNcXEBiYWJlbFxccnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RTcHJlYWQyIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IHsgbWFwR2V0dGVycyB9IGZyb20gJ3Z1ZXgnOwppbXBvcnQgYXhpb3MgZnJvbSAnYXhpb3MnOwppbXBvcnQgdnVlRmlsZVBvbmQgZnJvbSAndnVlLWZpbGVwb25kJzsKaW1wb3J0ICdmaWxlcG9uZC9kaXN0L2ZpbGVwb25kLm1pbi5jc3MnOyAvLyBQbHVnaW5zCgppbXBvcnQgRmlsZVBvbmRQbHVnaW5JbWFnZVByZXZpZXcgZnJvbSAnZmlsZXBvbmQtcGx1Z2luLWltYWdlLXByZXZpZXcnOwppbXBvcnQgJ2ZpbGVwb25kLXBsdWdpbi1pbWFnZS1wcmV2aWV3L2Rpc3QvZmlsZXBvbmQtcGx1Z2luLWltYWdlLXByZXZpZXcubWluLmNzcyc7IC8vIENyZWF0ZSBjb21wb25lbnQgYW5kIHJlZ2lzdCBwbHVnaW5zCgp2YXIgRmlsZVBvbmQgPSB2dWVGaWxlUG9uZChGaWxlUG9uZFBsdWdpbkltYWdlUHJldmlldyk7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnRmlsZVBvbmRVcGxvYWQnLAogIGNvbXBvbmVudHM6IHsKICAgIEZpbGVQb25kOiBGaWxlUG9uZAogIH0sCiAgcHJvcHM6IHsKICAgIG5hbWU6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICByZXF1aXJlZDogZmFsc2UsCiAgICAgIGRlZmF1bHQ6ICdmaWxlJwogICAgfSwKICAgIGZpbGVkOiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgcmVxdWlyZWQ6IGZhbHNlLAogICAgICBkZWZhdWx0OiAnJwogICAgfSwKICAgIG11bHRpcGxlOiB7CiAgICAgIHR5cGU6IEJvb2xlYW4sCiAgICAgIHJlcXVpcmVkOiBmYWxzZSwKICAgICAgZGVmYXVsdDogdHJ1ZQogICAgfSwKICAgIGFjY2VwdDogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIHJlcXVpcmVkOiBmYWxzZSwKICAgICAgZGVmYXVsdDogJycKICAgIH0sCiAgICBsYWJlbDogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIHJlcXVpcmVkOiBmYWxzZSwKICAgICAgZGVmYXVsdDogJ+eCueWHu+mAieaLqeaWh+S7tuaIluWwhuaWh+S7tuaLluaLveWIsOatpOWkhCcKICAgIH0sCiAgICB1cGxvYWRIYW5kbGVyOiB7CiAgICAgIHR5cGU6IEZ1bmN0aW9uLAogICAgICByZXF1aXJlZDogdHJ1ZQogICAgfQogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgcmV0dXJuIHsKICAgICAgc2VydmVyOiB7CiAgICAgICAgcHJvY2VzczogZnVuY3Rpb24gcHJvY2VzcyhmaWVsZE5hbWUsIGZpbGUsIG1ldGFkYXRhLCBsb2FkLCBlcnJvciwgcHJvZ3Jlc3MsIF9hYm9ydCkgewogICAgICAgICAgdmFyIGZvcm1EYXRhID0gbmV3IEZvcm1EYXRhKCk7CiAgICAgICAgICBmb3JtRGF0YS5hcHBlbmQoZmllbGROYW1lLCBmaWxlLCBmaWxlLm5hbWUpOwogICAgICAgICAgdmFyIENhbmNlbFRva2VuID0gYXhpb3MuQ2FuY2VsVG9rZW47CiAgICAgICAgICB2YXIgc291cmNlID0gQ2FuY2VsVG9rZW4uc291cmNlKCk7CgogICAgICAgICAgX3RoaXMudXBsb2FkSGFuZGxlcihmb3JtRGF0YSwgZnVuY3Rpb24gKHByb2dyZXNzRXZlbnQpIHsKICAgICAgICAgICAgaWYgKHByb2dyZXNzRXZlbnQudG90YWwgPiAwKSB7CiAgICAgICAgICAgICAgcHJvZ3Jlc3MocHJvZ3Jlc3NFdmVudC5sZW5ndGhDb21wdXRhYmxlLCBwcm9ncmVzc0V2ZW50LmxvYWRlZCwgcHJvZ3Jlc3NFdmVudC50b3RhbCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0sIHNvdXJjZS50b2tlbiwgX3RoaXMuZmlsZWQsIGZpbGUpLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgICAgIGxvYWQocmVzcG9uc2UpOwoKICAgICAgICAgICAgX3RoaXMuJGxvZy5kZWJ1ZygnVXBsb2FkZWQgc3VjY2Vzc2Z1bGx5JywgcmVzcG9uc2UpOwoKICAgICAgICAgICAgX3RoaXMuJGVtaXQoJ3N1Y2Nlc3MnLCByZXNwb25zZSwgZmlsZSk7CiAgICAgICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZmFpbHVyZSkgewogICAgICAgICAgICBfdGhpcy4kbG9nLmRlYnVnKCdGYWlsZWQgdG8gdXBsb2FkIGZpbGUnLCBmYWlsdXJlKTsKCiAgICAgICAgICAgIF90aGlzLiRlbWl0KCdmYWlsdXJlJywgZmFpbHVyZSwgZmlsZSk7CgogICAgICAgICAgICBlcnJvcigpOwogICAgICAgICAgfSk7CgogICAgICAgICAgcmV0dXJuIHsKICAgICAgICAgICAgYWJvcnQ6IGZ1bmN0aW9uIGFib3J0KCkgewogICAgICAgICAgICAgIF9hYm9ydCgpOwoKICAgICAgICAgICAgICBfdGhpcy4kbG9nLmRlYnVnKCdVcGxvYWQgb3BlcmF0aW9uIGFib3J0ZWQgYnkgdGhlIHVzZXInKTsKCiAgICAgICAgICAgICAgc291cmNlLmNhbmNlbCgnVXBsb2FkIG9wZXJhdGlvbiBjYW5jZWxlZCBieSB0aGUgdXNlci4nKTsKICAgICAgICAgICAgfQogICAgICAgICAgfTsKICAgICAgICB9CiAgICAgIH0sCiAgICAgIGZpbGVMaXN0OiBbXQogICAgfTsKICB9LAogIGNvbXB1dGVkOiBfb2JqZWN0U3ByZWFkKHt9LCBtYXBHZXR0ZXJzKFsnb3B0aW9ucyddKSksCiAgbWV0aG9kczogewogICAgaGFuZGxlRmlsZVBvbmRJbml0OiBmdW5jdGlvbiBoYW5kbGVGaWxlUG9uZEluaXQoKSB7CiAgICAgIHRoaXMuJGxvZy5kZWJ1ZygnRmlsZVBvbmQgaGFzIGluaXRpYWxpemVkJyk7CiAgICB9LAogICAgaGFuZGxlQ2xlYXJGaWxlTGlzdDogZnVuY3Rpb24gaGFuZGxlQ2xlYXJGaWxlTGlzdCgpIHsKICAgICAgdGhpcy4kcmVmcy5wb25kLnJlbW92ZUZpbGVzKCk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["FilePondUpload.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div>\r\n    <file-pond\r\n      ref=\"pond\"\r\n      :label-idle=\"label\"\r\n      :name=\"name\"\r\n      :allow-multiple=\"multiple\"\r\n      :allowRevert=\"false\"\r\n      :accepted-file-types=\"accept\"\r\n      :maxParallelUploads=\"options.attachment_upload_max_parallel_uploads\"\r\n      :allowImagePreview=\"options.attachment_upload_image_preview_enable\"\r\n      :maxFiles=\"options.attachment_upload_max_files\"\r\n      labelFileProcessing=\"上传中\"\r\n      labelFileProcessingComplete=\"上传完成\"\r\n      labelFileProcessingAborted=\"取消上传\"\r\n      labelFileProcessingError=\"上传错误\"\r\n      labelTapToCancel=\"点击取消\"\r\n      labelTapToRetry=\"点击重试\"\r\n      :files=\"fileList\"\r\n      :server=\"server\"\r\n      @init=\"handleFilePondInit\"\r\n    >\r\n    </file-pond>\r\n  </div>\r\n</template>\r\n<script>\r\nimport { mapGetters } from 'vuex'\r\nimport axios from 'axios'\r\n\r\nimport vueFilePond from 'vue-filepond'\r\nimport 'filepond/dist/filepond.min.css'\r\n\r\n// Plugins\r\nimport FilePondPluginImagePreview from 'filepond-plugin-image-preview'\r\nimport 'filepond-plugin-image-preview/dist/filepond-plugin-image-preview.min.css'\r\n\r\n// Create component and regist plugins\r\nconst FilePond = vueFilePond(FilePondPluginImagePreview)\r\nexport default {\r\n  name: 'FilePondUpload',\r\n  components: {\r\n    FilePond\r\n  },\r\n  props: {\r\n    name: {\r\n      type: String,\r\n      required: false,\r\n      default: 'file'\r\n    },\r\n    filed: {\r\n      type: String,\r\n      required: false,\r\n      default: ''\r\n    },\r\n    multiple: {\r\n      type: Boolean,\r\n      required: false,\r\n      default: true\r\n    },\r\n    accept: {\r\n      type: String,\r\n      required: false,\r\n      default: ''\r\n    },\r\n    label: {\r\n      type: String,\r\n      required: false,\r\n      default: '点击选择文件或将文件拖拽到此处'\r\n    },\r\n    uploadHandler: {\r\n      type: Function,\r\n      required: true\r\n    }\r\n  },\r\n  data: function() {\r\n    return {\r\n      server: {\r\n        process: (fieldName, file, metadata, load, error, progress, abort) => {\r\n          const formData = new FormData()\r\n          formData.append(fieldName, file, file.name)\r\n\r\n          const CancelToken = axios.CancelToken\r\n          const source = CancelToken.source()\r\n\r\n          this.uploadHandler(\r\n            formData,\r\n            progressEvent => {\r\n              if (progressEvent.total > 0) {\r\n                progress(progressEvent.lengthComputable, progressEvent.loaded, progressEvent.total)\r\n              }\r\n            },\r\n            source.token,\r\n            this.filed,\r\n            file\r\n          )\r\n            .then(response => {\r\n              load(response)\r\n              this.$log.debug('Uploaded successfully', response)\r\n              this.$emit('success', response, file)\r\n            })\r\n            .catch(failure => {\r\n              this.$log.debug('Failed to upload file', failure)\r\n              this.$emit('failure', failure, file)\r\n              error()\r\n            })\r\n          return {\r\n            abort: () => {\r\n              abort()\r\n              this.$log.debug('Upload operation aborted by the user')\r\n              source.cancel('Upload operation canceled by the user.')\r\n            }\r\n          }\r\n        }\r\n      },\r\n      fileList: []\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapGetters(['options'])\r\n  },\r\n  methods: {\r\n    handleFilePondInit() {\r\n      this.$log.debug('FilePond has initialized')\r\n    },\r\n    handleClearFileList() {\r\n      this.$refs.pond.removeFiles()\r\n    }\r\n  }\r\n}\r\n</script>\r\n<style lang=\"less\" scoped>\r\n</style>\r\n"],"sourceRoot":"src/components/Upload"}]}