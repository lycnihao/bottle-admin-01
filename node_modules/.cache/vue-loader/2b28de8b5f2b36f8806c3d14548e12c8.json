{"remainingRequest":"F:\\个人git项目\\couldr-user\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\个人git项目\\couldr-user\\src\\views\\account\\center\\page\\Project.vue?vue&type=style&index=0&id=c0abc932&lang=less&scoped=true&","dependencies":[{"path":"F:\\个人git项目\\couldr-user\\src\\views\\account\\center\\page\\Project.vue","mtime":1583417156414},{"path":"F:\\个人git项目\\couldr-user\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\个人git项目\\couldr-user\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"F:\\个人git项目\\couldr-user\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"F:\\个人git项目\\couldr-user\\node_modules\\less-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\个人git项目\\couldr-user\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\个人git项目\\couldr-user\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouYW50LXByby1wYWdlcy1hY2NvdW50LXByb2plY3RzLWNhcmRMaXN0IHsKICBtYXJnaW4tdG9wOiAyNHB4OwoKICAvZGVlcC8gLmFudC1jYXJkLW1ldGEtdGl0bGUgewogICAgbWFyZ2luLWJvdHRvbTogNHB4OwogIH0KCiAgL2RlZXAvIC5hbnQtY2FyZC1tZXRhLWRlc2NyaXB0aW9uIHsKICAgIGhlaWdodDogNDRweDsKICAgIG92ZXJmbG93OiBoaWRkZW47CiAgICBsaW5lLWhlaWdodDogMjJweDsKICB9CgogIC5jYXJkSXRlbUNvbnRlbnQgewogICAgZGlzcGxheTogZmxleDsKICAgIGhlaWdodDogMjBweDsKICAgIG1hcmdpbi10b3A6IDE2cHg7CiAgICBtYXJnaW4tYm90dG9tOiAtNHB4OwogICAgbGluZS1oZWlnaHQ6IDIwcHg7CgogICAgPiBzcGFuIHsKICAgICAgZmxleDogMSAxOwogICAgICBjb2xvcjogcmdiYSgwLDAsMCwuNDUpOwogICAgICBmb250LXNpemU6IDEycHg7CiAgICB9CgogICAgL2RlZXAvIC5hbnQtcHJvLWF2YXRhci1saXN0IHsKICAgICAgZmxleDogMCAxIGF1dG87CiAgICB9CiAgfQp9Cg=="},{"version":3,"sources":["Project.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6EA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"Project.vue","sourceRoot":"src/views/account/center/page","sourcesContent":["<template>\r\n  <div class=\"ant-pro-pages-account-projects-cardList\">\r\n    <a-list :loading=\"loading\" :data-source=\"data\" :grid=\"{ gutter: 24, xxl: 3, xl: 2, lg: 2, md: 2, sm: 2, xs: 1 }\">\r\n      <a-list-item slot=\"renderItem\" slot-scope=\"item\">\r\n        <a-card class=\"ant-pro-pages-account-projects-card\" hoverable>\r\n          <img slot=\"cover\" :src=\"item.cover\" :alt=\"item.title\" />\r\n          <a-card-meta :title=\"item.title\">\r\n            <template slot=\"description\">\r\n              <ellipsis :length=\"50\">{{ item.description }}</ellipsis>\r\n            </template>\r\n          </a-card-meta>\r\n          <div class=\"cardItemContent\">\r\n            <span>{{ item.updatedAt | fromNow }}</span>\r\n            <div class=\"avatarList\">\r\n              <avatar-list size=\"mini\">\r\n                <avatar-list-item\r\n                  v-for=\"(member, i) in item.members\"\r\n                  :key=\"`${item.id}-avatar-${i}`\"\r\n                  :src=\"member.avatar\"\r\n                  :tips=\"member.name\"\r\n                />\r\n              </avatar-list>\r\n            </div>\r\n          </div>\r\n        </a-card>\r\n      </a-list-item>\r\n    </a-list>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport moment from 'moment'\r\nimport { TagSelect, StandardFormRow, Ellipsis, AvatarList } from '@/components'\r\nconst TagSelectOption = TagSelect.Option\r\nconst AvatarListItem = AvatarList.AvatarItem\r\n\r\nexport default {\r\n  name: 'Project',\r\n  components: {\r\n    AvatarList,\r\n    AvatarListItem,\r\n    Ellipsis,\r\n    TagSelect,\r\n    TagSelectOption,\r\n    StandardFormRow\r\n  },\r\n  data () {\r\n    return {\r\n      data: [],\r\n      form: this.$form.createForm(this),\r\n      loading: true\r\n    }\r\n  },\r\n  filters: {\r\n    fromNow (date) {\r\n      return moment(date).fromNow()\r\n    }\r\n  },\r\n  mounted () {\r\n    this.getList()\r\n  },\r\n  methods: {\r\n    handleChange (value) {\r\n      console.log(`selected ${value}`)\r\n    },\r\n    getList () {\r\n      this.$http.get('/list/article', { params: { count: 8 } }).then(res => {\r\n        console.log('res', res)\r\n        this.data = res.result\r\n        this.loading = false\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n  .ant-pro-pages-account-projects-cardList {\r\n    margin-top: 24px;\r\n\r\n    /deep/ .ant-card-meta-title {\r\n      margin-bottom: 4px;\r\n    }\r\n\r\n    /deep/ .ant-card-meta-description {\r\n      height: 44px;\r\n      overflow: hidden;\r\n      line-height: 22px;\r\n    }\r\n\r\n    .cardItemContent {\r\n      display: flex;\r\n      height: 20px;\r\n      margin-top: 16px;\r\n      margin-bottom: -4px;\r\n      line-height: 20px;\r\n\r\n      > span {\r\n        flex: 1 1;\r\n        color: rgba(0,0,0,.45);\r\n        font-size: 12px;\r\n      }\r\n\r\n      /deep/ .ant-pro-avatar-list {\r\n        flex: 0 1 auto;\r\n      }\r\n    }\r\n  }\r\n</style>\r\n"]}]}