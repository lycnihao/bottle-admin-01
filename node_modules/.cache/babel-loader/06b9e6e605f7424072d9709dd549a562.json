{"remainingRequest":"F:\\个人git项目\\squirrel-admin\\node_modules\\babel-loader\\lib\\index.js!F:\\个人git项目\\squirrel-admin\\node_modules\\eslint-loader\\index.js??ref--13-0!F:\\个人git项目\\squirrel-admin\\src\\mock\\services\\auth.js","dependencies":[{"path":"F:\\个人git项目\\squirrel-admin\\src\\mock\\services\\auth.js","mtime":1583417156405},{"path":"F:\\个人git项目\\squirrel-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\个人git项目\\squirrel-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"F:\\个人git项目\\squirrel-admin\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5jbHVkZXMiOwppbXBvcnQgTW9jayBmcm9tICdtb2NranMyJzsKaW1wb3J0IHsgYnVpbGRlciwgZ2V0Qm9keSB9IGZyb20gJy4uL3V0aWwnOwp2YXIgdXNlcm5hbWUgPSBbJ2FkbWluJywgJ3N1cGVyJ107IC8vIOW8uuehrOimgeaxgiBhbnQuZGVzaWduIOebuOWQjOWvhueggQovLyAnMjEyMzJmMjk3YTU3YTVhNzQzODk0YTBlNGE4MDFmYzMnLAoKdmFyIHBhc3N3b3JkID0gWyc4OTE0ZGU2ODZhYjI4ZGMyMmYzMGQzZDhlMTA3ZmY2YyddOyAvLyBhZG1pbiwgYW50LmRlc2lnbgoKdmFyIGxvZ2luID0gZnVuY3Rpb24gbG9naW4ob3B0aW9ucykgewogIHZhciBib2R5ID0gZ2V0Qm9keShvcHRpb25zKTsKICBjb25zb2xlLmxvZygnbW9jazogYm9keScsIGJvZHkpOwoKICBpZiAoIXVzZXJuYW1lLmluY2x1ZGVzKGJvZHkudXNlcm5hbWUpIHx8ICFwYXNzd29yZC5pbmNsdWRlcyhib2R5LnBhc3N3b3JkKSkgewogICAgcmV0dXJuIGJ1aWxkZXIoewogICAgICBpc0xvZ2luOiB0cnVlCiAgICB9LCAn6LSm5oi35oiW5a+G56CB6ZSZ6K+vJywgNDAxKTsKICB9CgogIHJldHVybiBidWlsZGVyKHsKICAgICdpZCc6IE1vY2subW9jaygnQGd1aWQnKSwKICAgICduYW1lJzogTW9jay5tb2NrKCdAbmFtZScpLAogICAgJ3VzZXJuYW1lJzogJ2FkbWluJywKICAgICdwYXNzd29yZCc6ICcnLAogICAgJ2F2YXRhcic6ICdodHRwczovL2d3LmFsaXBheW9iamVjdHMuY29tL3pvcy9ybXNwb3J0YWwvalpVSXhtSnljb3ltQnByTE9VYlQucG5nJywKICAgICdzdGF0dXMnOiAxLAogICAgJ3RlbGVwaG9uZSc6ICcnLAogICAgJ2xhc3RMb2dpbklwJzogJzI3LjE1NC43NC4xMTcnLAogICAgJ2xhc3RMb2dpblRpbWUnOiAxNTM0ODM3NjIxMzQ4LAogICAgJ2NyZWF0b3JJZCc6ICdhZG1pbicsCiAgICAnY3JlYXRlVGltZSc6IDE0OTcxNjA2MTAyNTksCiAgICAnZGVsZXRlZCc6IDAsCiAgICAncm9sZUlkJzogJ2FkbWluJywKICAgICdsYW5nJzogJ3poLUNOJywKICAgICd0b2tlbic6ICc0MjkxZDdkYTkwMDUzNzdlYzlhZWM0YTcxZWE4MzdmJwogIH0sICcnLCAyMDAsIHsKICAgICdDdXN0b20tSGVhZGVyJzogTW9jay5tb2NrKCdAZ3VpZCcpCiAgfSk7Cn07Cgp2YXIgbG9nb3V0ID0gZnVuY3Rpb24gbG9nb3V0KCkgewogIHJldHVybiBidWlsZGVyKHt9LCAnW+a1i+ivleaOpeWPo10g5rOo6ZSA5oiQ5YqfJyk7Cn07Cgp2YXIgc21zQ2FwdGNoYSA9IGZ1bmN0aW9uIHNtc0NhcHRjaGEoKSB7CiAgcmV0dXJuIGJ1aWxkZXIoewogICAgY2FwdGNoYTogTW9jay5tb2NrKCdAaW50ZWdlcigxMDAwMCwgOTk5OTkpJykKICB9KTsKfTsKCnZhciB0d29mYWN0b3IgPSBmdW5jdGlvbiB0d29mYWN0b3IoKSB7CiAgcmV0dXJuIGJ1aWxkZXIoewogICAgc3RlcENvZGU6IE1vY2subW9jaygnQGludGVnZXIoMCwgMSknKQogIH0pOwp9OwoKTW9jay5tb2NrKC9cL2F1dGhcL2xvZ2luLywgJ3Bvc3QnLCBsb2dpbik7Ck1vY2subW9jaygvXC9hdXRoXC9sb2dvdXQvLCAncG9zdCcsIGxvZ291dCk7Ck1vY2subW9jaygvXC9hY2NvdW50XC9zbXMvLCAncG9zdCcsIHNtc0NhcHRjaGEpOwpNb2NrLm1vY2soL1wvYXV0aFwvMnN0ZXAtY29kZS8sICdwb3N0JywgdHdvZmFjdG9yKTs="},{"version":3,"sources":["F:/个人git项目/squirrel-admin/src/mock/services/auth.js"],"names":["Mock","builder","getBody","username","password","login","options","body","console","log","includes","isLogin","mock","logout","smsCaptcha","captcha","twofactor","stepCode"],"mappings":";AAAA,OAAOA,IAAP,MAAiB,SAAjB;AACA,SAASC,OAAT,EAAkBC,OAAlB,QAAiC,SAAjC;AAEA,IAAMC,QAAQ,GAAG,CAAC,OAAD,EAAU,OAAV,CAAjB,C,CACA;AACA;;AACA,IAAMC,QAAQ,GAAG,CAAC,kCAAD,CAAjB,C,CAAsD;;AAEtD,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,OAAD,EAAa;AACzB,MAAMC,IAAI,GAAGL,OAAO,CAACI,OAAD,CAApB;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BF,IAA1B;;AACA,MAAI,CAACJ,QAAQ,CAACO,QAAT,CAAkBH,IAAI,CAACJ,QAAvB,CAAD,IAAqC,CAACC,QAAQ,CAACM,QAAT,CAAkBH,IAAI,CAACH,QAAvB,CAA1C,EAA4E;AAC1E,WAAOH,OAAO,CAAC;AAAEU,MAAAA,OAAO,EAAE;AAAX,KAAD,EAAoB,SAApB,EAA+B,GAA/B,CAAd;AACD;;AAED,SAAOV,OAAO,CAAC;AACb,UAAMD,IAAI,CAACY,IAAL,CAAU,OAAV,CADO;AAEb,YAAQZ,IAAI,CAACY,IAAL,CAAU,OAAV,CAFK;AAGb,gBAAY,OAHC;AAIb,gBAAY,EAJC;AAKb,cAAU,qEALG;AAMb,cAAU,CANG;AAOb,iBAAa,EAPA;AAQb,mBAAe,eARF;AASb,qBAAiB,aATJ;AAUb,iBAAa,OAVA;AAWb,kBAAc,aAXD;AAYb,eAAW,CAZE;AAab,cAAU,OAbG;AAcb,YAAQ,OAdK;AAeb,aAAS;AAfI,GAAD,EAgBX,EAhBW,EAgBP,GAhBO,EAgBF;AAAE,qBAAiBZ,IAAI,CAACY,IAAL,CAAU,OAAV;AAAnB,GAhBE,CAAd;AAiBD,CAxBD;;AA0BA,IAAMC,MAAM,GAAG,SAATA,MAAS,GAAM;AACnB,SAAOZ,OAAO,CAAC,EAAD,EAAK,aAAL,CAAd;AACD,CAFD;;AAIA,IAAMa,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvB,SAAOb,OAAO,CAAC;AAAEc,IAAAA,OAAO,EAAEf,IAAI,CAACY,IAAL,CAAU,wBAAV;AAAX,GAAD,CAAd;AACD,CAFD;;AAIA,IAAMI,SAAS,GAAG,SAAZA,SAAY,GAAM;AACtB,SAAOf,OAAO,CAAC;AAAEgB,IAAAA,QAAQ,EAAEjB,IAAI,CAACY,IAAL,CAAU,gBAAV;AAAZ,GAAD,CAAd;AACD,CAFD;;AAIAZ,IAAI,CAACY,IAAL,CAAU,eAAV,EAA2B,MAA3B,EAAmCP,KAAnC;AACAL,IAAI,CAACY,IAAL,CAAU,gBAAV,EAA4B,MAA5B,EAAoCC,MAApC;AACAb,IAAI,CAACY,IAAL,CAAU,gBAAV,EAA4B,MAA5B,EAAoCE,UAApC;AACAd,IAAI,CAACY,IAAL,CAAU,oBAAV,EAAgC,MAAhC,EAAwCI,SAAxC","sourcesContent":["import Mock from 'mockjs2'\r\nimport { builder, getBody } from '../util'\r\n\r\nconst username = ['admin', 'super']\r\n// 强硬要求 ant.design 相同密码\r\n// '21232f297a57a5a743894a0e4a801fc3',\r\nconst password = ['8914de686ab28dc22f30d3d8e107ff6c'] // admin, ant.design\r\n\r\nconst login = (options) => {\r\n  const body = getBody(options)\r\n  console.log('mock: body', body)\r\n  if (!username.includes(body.username) || !password.includes(body.password)) {\r\n    return builder({ isLogin: true }, '账户或密码错误', 401)\r\n  }\r\n\r\n  return builder({\r\n    'id': Mock.mock('@guid'),\r\n    'name': Mock.mock('@name'),\r\n    'username': 'admin',\r\n    'password': '',\r\n    'avatar': 'https://gw.alipayobjects.com/zos/rmsportal/jZUIxmJycoymBprLOUbT.png',\r\n    'status': 1,\r\n    'telephone': '',\r\n    'lastLoginIp': '27.154.74.117',\r\n    'lastLoginTime': 1534837621348,\r\n    'creatorId': 'admin',\r\n    'createTime': 1497160610259,\r\n    'deleted': 0,\r\n    'roleId': 'admin',\r\n    'lang': 'zh-CN',\r\n    'token': '4291d7da9005377ec9aec4a71ea837f'\r\n  }, '', 200, { 'Custom-Header': Mock.mock('@guid') })\r\n}\r\n\r\nconst logout = () => {\r\n  return builder({}, '[测试接口] 注销成功')\r\n}\r\n\r\nconst smsCaptcha = () => {\r\n  return builder({ captcha: Mock.mock('@integer(10000, 99999)') })\r\n}\r\n\r\nconst twofactor = () => {\r\n  return builder({ stepCode: Mock.mock('@integer(0, 1)') })\r\n}\r\n\r\nMock.mock(/\\/auth\\/login/, 'post', login)\r\nMock.mock(/\\/auth\\/logout/, 'post', logout)\r\nMock.mock(/\\/account\\/sms/, 'post', smsCaptcha)\r\nMock.mock(/\\/auth\\/2step-code/, 'post', twofactor)\r\n"]}]}