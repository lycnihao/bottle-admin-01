{"remainingRequest":"F:\\个人git项目\\couldr-admin\\node_modules\\babel-loader\\lib\\index.js!F:\\个人git项目\\couldr-admin\\node_modules\\eslint-loader\\index.js??ref--13-0!F:\\个人git项目\\couldr-admin\\src\\permission.js","dependencies":[{"path":"F:\\个人git项目\\couldr-admin\\src\\permission.js","mtime":1583417156407},{"path":"F:\\个人git项目\\couldr-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\个人git项目\\couldr-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"F:\\个人git项目\\couldr-admin\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5jbHVkZXMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5mdW5jdGlvbi5uYW1lIjsKaW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiRjpcXFx1NEUyQVx1NEVCQWdpdFx1OTg3OVx1NzZFRVxcY291bGRyLWFkbWluXFxub2RlX21vZHVsZXNcXEBiYWJlbFxccnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RTcHJlYWQyIjsKaW1wb3J0IFZ1ZSBmcm9tICd2dWUnOwppbXBvcnQgcm91dGVyIGZyb20gJy4vcm91dGVyJzsKaW1wb3J0IHN0b3JlIGZyb20gJy4vc3RvcmUnOwppbXBvcnQgTlByb2dyZXNzIGZyb20gJ25wcm9ncmVzcyc7IC8vIHByb2dyZXNzIGJhcgoKaW1wb3J0ICdAL2NvbXBvbmVudHMvTlByb2dyZXNzL25wcm9ncmVzcy5sZXNzJzsgLy8gcHJvZ3Jlc3MgYmFyIGN1c3RvbSBzdHlsZQoKaW1wb3J0IG5vdGlmaWNhdGlvbiBmcm9tICdhbnQtZGVzaWduLXZ1ZS9lcy9ub3RpZmljYXRpb24nOwppbXBvcnQgeyBzZXREb2N1bWVudFRpdGxlLCBkb21UaXRsZSB9IGZyb20gJ0AvdXRpbHMvZG9tVXRpbCc7CmltcG9ydCB7IEFDQ0VTU19UT0tFTiB9IGZyb20gJ0Avc3RvcmUvbXV0YXRpb24tdHlwZXMnOwpOUHJvZ3Jlc3MuY29uZmlndXJlKHsKICBzaG93U3Bpbm5lcjogZmFsc2UKfSk7IC8vIE5Qcm9ncmVzcyBDb25maWd1cmF0aW9uCgp2YXIgd2hpdGVMaXN0ID0gWydsb2dpbicsICdyZWdpc3RlcicsICdyZWdpc3RlclJlc3VsdCddOyAvLyBubyByZWRpcmVjdCB3aGl0ZWxpc3QKCnZhciBkZWZhdWx0Um91dGVQYXRoID0gJy9kYXNoYm9hcmQvd29ya3BsYWNlJzsKcm91dGVyLmJlZm9yZUVhY2goZnVuY3Rpb24gKHRvLCBmcm9tLCBuZXh0KSB7CiAgTlByb2dyZXNzLnN0YXJ0KCk7IC8vIHN0YXJ0IHByb2dyZXNzIGJhcgoKICB0by5tZXRhICYmIHR5cGVvZiB0by5tZXRhLnRpdGxlICE9PSAndW5kZWZpbmVkJyAmJiBzZXREb2N1bWVudFRpdGxlKCIiLmNvbmNhdCh0by5tZXRhLnRpdGxlLCAiIC0gIikuY29uY2F0KGRvbVRpdGxlKSk7CgogIGlmIChWdWUubHMuZ2V0KEFDQ0VTU19UT0tFTikpIHsKICAgIC8qIGhhcyB0b2tlbiAqLwogICAgaWYgKHRvLnBhdGggPT09ICcvdXNlci9sb2dpbicpIHsKICAgICAgbmV4dCh7CiAgICAgICAgcGF0aDogZGVmYXVsdFJvdXRlUGF0aAogICAgICB9KTsKICAgICAgTlByb2dyZXNzLmRvbmUoKTsKICAgIH0gZWxzZSB7CiAgICAgIGlmIChzdG9yZS5nZXR0ZXJzLnJvbGVzLmxlbmd0aCA9PT0gMCkgewogICAgICAgIHN0b3JlLmRpc3BhdGNoKCdHZXRJbmZvJykudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgICB2YXIgcm9sZXMgPSByZXMucmVzdWx0ICYmIHJlcy5yZXN1bHQucm9sZTsKICAgICAgICAgIHN0b3JlLmRpc3BhdGNoKCdHZW5lcmF0ZVJvdXRlcycsIHsKICAgICAgICAgICAgcm9sZXM6IHJvbGVzCiAgICAgICAgICB9KS50aGVuKGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgLy8g5qC55o2ucm9sZXPmnYPpmZDnlJ/miJDlj6/orr/pl67nmoTot6/nlLHooagKICAgICAgICAgICAgLy8g5Yqo5oCB5re75Yqg5Y+v6K6/6Zeu6Lev55Sx6KGoCiAgICAgICAgICAgIHJvdXRlci5hZGRSb3V0ZXMoc3RvcmUuZ2V0dGVycy5hZGRSb3V0ZXJzKTsgLy8g6K+35rGC5bim5pyJIHJlZGlyZWN0IOmHjeWumuWQkeaXtu+8jOeZu+W9leiHquWKqOmHjeWumuWQkeWIsOivpeWcsOWdgAoKICAgICAgICAgICAgdmFyIHJlZGlyZWN0ID0gZGVjb2RlVVJJQ29tcG9uZW50KGZyb20ucXVlcnkucmVkaXJlY3QgfHwgdG8ucGF0aCk7CgogICAgICAgICAgICBpZiAodG8ucGF0aCA9PT0gcmVkaXJlY3QpIHsKICAgICAgICAgICAgICAvLyBoYWNr5pa55rOVIOehruS/nWFkZFJvdXRlc+W3suWujOaIkCAsc2V0IHRoZSByZXBsYWNlOiB0cnVlIHNvIHRoZSBuYXZpZ2F0aW9uIHdpbGwgbm90IGxlYXZlIGEgaGlzdG9yeSByZWNvcmQKICAgICAgICAgICAgICBuZXh0KF9vYmplY3RTcHJlYWQoe30sIHRvLCB7CiAgICAgICAgICAgICAgICByZXBsYWNlOiB0cnVlCiAgICAgICAgICAgICAgfSkpOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgIC8vIOi3s+i9rOWIsOebrueahOi3r+eUsQogICAgICAgICAgICAgIG5leHQoewogICAgICAgICAgICAgICAgcGF0aDogcmVkaXJlY3QKICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgfQogICAgICAgICAgfSk7CiAgICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKCkgewogICAgICAgICAgbm90aWZpY2F0aW9uLmVycm9yKHsKICAgICAgICAgICAgbWVzc2FnZTogJ+mUmeivrycsCiAgICAgICAgICAgIGRlc2NyaXB0aW9uOiAn6K+35rGC55So5oi35L+h5oGv5aSx6LSl77yM6K+36YeN6K+VJwogICAgICAgICAgfSk7CiAgICAgICAgICBzdG9yZS5kaXNwYXRjaCgnTG9nb3V0JykudGhlbihmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgIG5leHQoewogICAgICAgICAgICAgIHBhdGg6ICcvdXNlci9sb2dpbicsCiAgICAgICAgICAgICAgcXVlcnk6IHsKICAgICAgICAgICAgICAgIHJlZGlyZWN0OiB0by5mdWxsUGF0aAogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSk7CiAgICAgICAgICB9KTsKICAgICAgICB9KTsKICAgICAgfSBlbHNlIHsKICAgICAgICBuZXh0KCk7CiAgICAgIH0KICAgIH0KICB9IGVsc2UgewogICAgaWYgKHdoaXRlTGlzdC5pbmNsdWRlcyh0by5uYW1lKSkgewogICAgICAvLyDlnKjlhY3nmbvlvZXnmb3lkI3ljZXvvIznm7TmjqXov5vlhaUKICAgICAgbmV4dCgpOwogICAgfSBlbHNlIHsKICAgICAgbmV4dCh7CiAgICAgICAgcGF0aDogJy91c2VyL2xvZ2luJywKICAgICAgICBxdWVyeTogewogICAgICAgICAgcmVkaXJlY3Q6IHRvLmZ1bGxQYXRoCiAgICAgICAgfQogICAgICB9KTsKICAgICAgTlByb2dyZXNzLmRvbmUoKTsgLy8gaWYgY3VycmVudCBwYWdlIGlzIGxvZ2luIHdpbGwgbm90IHRyaWdnZXIgYWZ0ZXJFYWNoIGhvb2ssIHNvIG1hbnVhbGx5IGhhbmRsZSBpdAogICAgfQogIH0KfSk7CnJvdXRlci5hZnRlckVhY2goZnVuY3Rpb24gKCkgewogIE5Qcm9ncmVzcy5kb25lKCk7IC8vIGZpbmlzaCBwcm9ncmVzcyBiYXIKfSk7"},{"version":3,"sources":["F:/个人git项目/couldr-admin/src/permission.js"],"names":["Vue","router","store","NProgress","notification","setDocumentTitle","domTitle","ACCESS_TOKEN","configure","showSpinner","whiteList","defaultRoutePath","beforeEach","to","from","next","start","meta","title","ls","get","path","done","getters","roles","length","dispatch","then","res","result","role","addRoutes","addRouters","redirect","decodeURIComponent","query","replace","catch","error","message","description","fullPath","includes","name","afterEach"],"mappings":"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","sourcesContent":["import Vue from 'vue'\r\nimport router from './router'\r\nimport store from './store'\r\n\r\nimport NProgress from 'nprogress' // progress bar\r\nimport '@/components/NProgress/nprogress.less' // progress bar custom style\r\nimport notification from 'ant-design-vue/es/notification'\r\nimport { setDocumentTitle, domTitle } from '@/utils/domUtil'\r\nimport { ACCESS_TOKEN } from '@/store/mutation-types'\r\n\r\nNProgress.configure({ showSpinner: false }) // NProgress Configuration\r\n\r\nconst whiteList = ['login', 'register', 'registerResult'] // no redirect whitelist\r\nconst defaultRoutePath = '/dashboard/workplace'\r\n\r\nrouter.beforeEach((to, from, next) => {\r\n  NProgress.start() // start progress bar\r\n  to.meta && (typeof to.meta.title !== 'undefined' && setDocumentTitle(`${to.meta.title} - ${domTitle}`))\r\n  if (Vue.ls.get(ACCESS_TOKEN)) {\r\n    /* has token */\r\n    if (to.path === '/user/login') {\r\n      next({ path: defaultRoutePath })\r\n      NProgress.done()\r\n    } else {\r\n      if (store.getters.roles.length === 0) {\r\n        store\r\n          .dispatch('GetInfo')\r\n          .then(res => {\r\n            const roles = res.result && res.result.role\r\n            store.dispatch('GenerateRoutes', { roles }).then(() => {\r\n              // 根据roles权限生成可访问的路由表\r\n              // 动态添加可访问路由表\r\n              router.addRoutes(store.getters.addRouters)\r\n              // 请求带有 redirect 重定向时，登录自动重定向到该地址\r\n              const redirect = decodeURIComponent(from.query.redirect || to.path)\r\n              if (to.path === redirect) {\r\n                // hack方法 确保addRoutes已完成 ,set the replace: true so the navigation will not leave a history record\r\n                next({ ...to, replace: true })\r\n              } else {\r\n                // 跳转到目的路由\r\n                next({ path: redirect })\r\n              }\r\n            })\r\n          })\r\n          .catch(() => {\r\n            notification.error({\r\n              message: '错误',\r\n              description: '请求用户信息失败，请重试'\r\n            })\r\n            store.dispatch('Logout').then(() => {\r\n              next({ path: '/user/login', query: { redirect: to.fullPath } })\r\n            })\r\n          })\r\n      } else {\r\n        next()\r\n      }\r\n    }\r\n  } else {\r\n    if (whiteList.includes(to.name)) {\r\n      // 在免登录白名单，直接进入\r\n      next()\r\n    } else {\r\n      next({ path: '/user/login', query: { redirect: to.fullPath } })\r\n      NProgress.done() // if current page is login will not trigger afterEach hook, so manually handle it\r\n    }\r\n  }\r\n})\r\n\r\nrouter.afterEach(() => {\r\n  NProgress.done() // finish progress bar\r\n})\r\n"]}]}