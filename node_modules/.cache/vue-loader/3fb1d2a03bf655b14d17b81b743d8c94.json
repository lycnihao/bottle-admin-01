{"remainingRequest":"D:\\iksen\\个人git项目\\squirrel-admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\iksen\\个人git项目\\squirrel-admin\\src\\components\\Upload\\Upload.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\iksen\\个人git项目\\squirrel-admin\\src\\components\\Upload\\Upload.vue","mtime":1586223528245},{"path":"D:\\iksen\\个人git项目\\squirrel-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1586223459088},{"path":"D:\\iksen\\个人git项目\\squirrel-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":1586223449822},{"path":"D:\\iksen\\个人git项目\\squirrel-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1586223459088},{"path":"D:\\iksen\\个人git项目\\squirrel-admin\\node_modules\\vue-loader\\lib\\index.js","mtime":1586223523515}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgYXhpb3MgZnJvbSAnYXhpb3MnDQoNCmV4cG9ydCBkZWZhdWx0IHsNCiAgbmFtZTogJ1VwbG9hZCcsDQogIHByb3BzOiB7DQogICAgbmFtZTogew0KICAgICAgdHlwZTogU3RyaW5nLA0KICAgICAgcmVxdWlyZWQ6IGZhbHNlLA0KICAgICAgZGVmYXVsdDogJ2ZpbGUnDQogICAgfSwNCiAgICBtdWx0aXBsZTogew0KICAgICAgdHlwZTogQm9vbGVhbiwNCiAgICAgIHJlcXVpcmVkOiBmYWxzZSwNCiAgICAgIGRlZmF1bHQ6IGZhbHNlDQogICAgfSwNCiAgICBkcmFnZ2FibGU6IHsNCiAgICAgIHR5cGU6IEJvb2xlYW4sDQogICAgICByZXF1aXJlZDogZmFsc2UsDQogICAgICBkZWZhdWx0OiB0cnVlDQogICAgfSwNCiAgICBhY2NlcHQ6IHsNCiAgICAgIHR5cGU6IFN0cmluZywNCiAgICAgIHJlcXVpcmVkOiBmYWxzZSwNCiAgICAgIGRlZmF1bHQ6ICcnDQogICAgfSwNCiAgICB1cGxvYWRIYW5kbGVyOiB7DQogICAgICB0eXBlOiBGdW5jdGlvbiwNCiAgICAgIHJlcXVpcmVkOiB0cnVlDQogICAgfQ0KICB9LA0KICBtZXRob2RzOiB7DQogICAgaGFuZGxlQ2hhbmdlKGluZm8pIHsNCiAgICAgIHRoaXMuJGVtaXQoJ2NoYW5nZScsIGluZm8pDQogICAgfSwNCiAgICBoYW5kbGVSZW1vdmUoZmlsZSkgew0KICAgICAgdGhpcy4kbG9nLmRlYnVnKCdSZW1vdmVkIGZpbGUnLCBmaWxlKQ0KICAgICAgdGhpcy4kZW1pdCgncmVtb3ZlJywgZmlsZSkNCiAgICB9LA0KICAgIGhhbmRsZVVwbG9hZChvcHRpb24pIHsNCiAgICAgIHRoaXMuJGxvZy5kZWJ1ZygnVXBsb2FkaW5nIG9wdGlvbicsIG9wdGlvbikNCiAgICAgIGNvbnN0IENhbmNlbFRva2VuID0gYXhpb3MuQ2FuY2VsVG9rZW4NCiAgICAgIGNvbnN0IHNvdXJjZSA9IENhbmNlbFRva2VuLnNvdXJjZSgpDQoNCiAgICAgIGNvbnN0IGRhdGEgPSBuZXcgRm9ybURhdGEoKQ0KICAgICAgZGF0YS5hcHBlbmQodGhpcy5uYW1lLCBvcHRpb24uZmlsZSkNCg0KICAgICAgdGhpcy51cGxvYWRIYW5kbGVyKA0KICAgICAgICBkYXRhLA0KICAgICAgICBwcm9ncmVzc0V2ZW50ID0+IHsNCiAgICAgICAgICBpZiAocHJvZ3Jlc3NFdmVudC50b3RhbCA+IDApIHsNCiAgICAgICAgICAgIHByb2dyZXNzRXZlbnQucGVyY2VudCA9IChwcm9ncmVzc0V2ZW50LmxvYWRlZCAvIHByb2dyZXNzRXZlbnQudG90YWwpICogMTAwDQogICAgICAgICAgfQ0KICAgICAgICAgIHRoaXMuJGxvZy5kZWJ1ZygnVXBsb2FkaW5nIHBlcmNlbnQ6ICcsIHByb2dyZXNzRXZlbnQucGVyY2VudCkNCiAgICAgICAgICBvcHRpb24ub25Qcm9ncmVzcyhwcm9ncmVzc0V2ZW50KQ0KICAgICAgICB9LA0KICAgICAgICBzb3VyY2UudG9rZW4sDQogICAgICAgIG9wdGlvbi5maWxlDQogICAgICApDQogICAgICAgIC50aGVuKHJlc3BvbnNlID0+IHsNCiAgICAgICAgICB0aGlzLiRsb2cuZGVidWcoJ1VwbG9hZGVkIHN1Y2Nlc3NmdWxseScsIHJlc3BvbnNlKQ0KICAgICAgICAgIG9wdGlvbi5vblN1Y2Nlc3MocmVzcG9uc2UsIG9wdGlvbi5maWxlKQ0KICAgICAgICAgIHRoaXMuJGVtaXQoJ3N1Y2Nlc3MnLCByZXNwb25zZSwgb3B0aW9uLmZpbGUpDQogICAgICAgIH0pDQogICAgICAgIC5jYXRjaChlcnJvciA9PiB7DQogICAgICAgICAgdGhpcy4kbG9nLmRlYnVnKCdGYWlsZWQgdG8gdXBsb2FkIGZpbGUnLCBlcnJvcikNCiAgICAgICAgICBvcHRpb24ub25FcnJvcihlcnJvciwgZXJyb3IucmVzcG9uc2UpDQogICAgICAgICAgdGhpcy4kZW1pdCgnZmFpbHVyZScsIGVycm9yLCBvcHRpb24uZmlsZSkNCiAgICAgICAgfSkNCiAgICAgIHJldHVybiB7DQogICAgICAgIGFib3J0OiAoKSA9PiB7DQogICAgICAgICAgdGhpcy4kbG9nLmRlYnVnKCdVcGxvYWQgb3BlcmF0aW9uIGFib3J0ZWQgYnkgdGhlIHVzZXInKQ0KICAgICAgICAgIHNvdXJjZS5jYW5jZWwoJ1VwbG9hZCBvcGVyYXRpb24gY2FuY2VsZWQgYnkgdGhlIHVzZXIuJykNCiAgICAgICAgfQ0KICAgICAgfQ0KICAgIH0NCiAgfQ0KfQ0K"},{"version":3,"sources":["Upload.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+BA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Upload.vue","sourceRoot":"src/components/Upload","sourcesContent":["<template>\r\n  <div>\r\n    <a-upload-dragger\r\n      v-if=\"draggable\"\r\n      :name=\"name\"\r\n      :multiple=\"multiple\"\r\n      :accept=\"accept\"\r\n      :customRequest=\"handleUpload\"\r\n      :remove=\"handleRemove\"\r\n      @change=\"handleChange\"\r\n    >\r\n      <slot\r\n        role=\"button\"\r\n        class=\"ant-upload ant-upload-btn\"\r\n      />\r\n    </a-upload-dragger>\r\n    <a-upload\r\n      v-else\r\n      :name=\"name\"\r\n      :multiple=\"multiple\"\r\n      :accept=\"accept\"\r\n      :customRequest=\"handleUpload\"\r\n      :remove=\"handleRemove\"\r\n      @change=\"handleChange\"\r\n    >\r\n      <slot />\r\n    </a-upload>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\n\r\nexport default {\r\n  name: 'Upload',\r\n  props: {\r\n    name: {\r\n      type: String,\r\n      required: false,\r\n      default: 'file'\r\n    },\r\n    multiple: {\r\n      type: Boolean,\r\n      required: false,\r\n      default: false\r\n    },\r\n    draggable: {\r\n      type: Boolean,\r\n      required: false,\r\n      default: true\r\n    },\r\n    accept: {\r\n      type: String,\r\n      required: false,\r\n      default: ''\r\n    },\r\n    uploadHandler: {\r\n      type: Function,\r\n      required: true\r\n    }\r\n  },\r\n  methods: {\r\n    handleChange(info) {\r\n      this.$emit('change', info)\r\n    },\r\n    handleRemove(file) {\r\n      this.$log.debug('Removed file', file)\r\n      this.$emit('remove', file)\r\n    },\r\n    handleUpload(option) {\r\n      this.$log.debug('Uploading option', option)\r\n      const CancelToken = axios.CancelToken\r\n      const source = CancelToken.source()\r\n\r\n      const data = new FormData()\r\n      data.append(this.name, option.file)\r\n\r\n      this.uploadHandler(\r\n        data,\r\n        progressEvent => {\r\n          if (progressEvent.total > 0) {\r\n            progressEvent.percent = (progressEvent.loaded / progressEvent.total) * 100\r\n          }\r\n          this.$log.debug('Uploading percent: ', progressEvent.percent)\r\n          option.onProgress(progressEvent)\r\n        },\r\n        source.token,\r\n        option.file\r\n      )\r\n        .then(response => {\r\n          this.$log.debug('Uploaded successfully', response)\r\n          option.onSuccess(response, option.file)\r\n          this.$emit('success', response, option.file)\r\n        })\r\n        .catch(error => {\r\n          this.$log.debug('Failed to upload file', error)\r\n          option.onError(error, error.response)\r\n          this.$emit('failure', error, option.file)\r\n        })\r\n      return {\r\n        abort: () => {\r\n          this.$log.debug('Upload operation aborted by the user')\r\n          source.cancel('Upload operation canceled by the user.')\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n</style>\r\n"]}]}