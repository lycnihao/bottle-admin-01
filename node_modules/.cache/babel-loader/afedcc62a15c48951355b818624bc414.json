{"remainingRequest":"F:\\个人git项目\\couldr-admin\\node_modules\\babel-loader\\lib\\index.js!F:\\个人git项目\\couldr-admin\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!F:\\个人git项目\\couldr-admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\个人git项目\\couldr-admin\\src\\components\\Charts\\TagCloud.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\个人git项目\\couldr-admin\\src\\components\\Charts\\TagCloud.vue","mtime":1583417156379},{"path":"F:\\个人git项目\\couldr-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\个人git项目\\couldr-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"F:\\个人git项目\\couldr-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\个人git项目\\couldr-admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMubnVtYmVyLmNvbnN0cnVjdG9yIjsKaW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiRjpcXFx1NEUyQVx1NEVCQWdpdFx1OTg3OVx1NzZFRVxcY291bGRyLWFkbWluXFxub2RlX21vZHVsZXNcXEBiYWJlbFxccnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RTcHJlYWQyIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IHsgcmVnaXN0ZXJTaGFwZSB9IGZyb20gJ3Zpc2VyLXZ1ZSc7Cgp2YXIgRGF0YVNldCA9IHJlcXVpcmUoJ0BhbnR2L2RhdGEtc2V0Jyk7Cgp2YXIgaW1nVXJsID0gJ2h0dHBzOi8vZ3cuYWxpcGF5b2JqZWN0cy5jb20vem9zL3Jtc3BvcnRhbC9nV3llR0xDZEZGUmF2QkdJRHpXay5wbmcnOwp2YXIgc2NhbGUgPSBbewogIGRhdGFLZXk6ICd4JywKICBuaWNlOiBmYWxzZQp9LCB7CiAgZGF0YUtleTogJ3knLAogIG5pY2U6IGZhbHNlCn1dOwpyZWdpc3RlclNoYXBlKCdwb2ludCcsICdjbG91ZCcsIHsKICBkcmF3OiBmdW5jdGlvbiBkcmF3KGNmZywgY29udGFpbmVyKSB7CiAgICByZXR1cm4gY29udGFpbmVyLmFkZFNoYXBlKCd0ZXh0JywgewogICAgICBhdHRyczogX29iamVjdFNwcmVhZCh7CiAgICAgICAgZmlsbE9wYWNpdHk6IGNmZy5vcGFjaXR5LAogICAgICAgIGZvbnRTaXplOiBjZmcub3JpZ2luLl9vcmlnaW4uc2l6ZSwKICAgICAgICByb3RhdGU6IGNmZy5vcmlnaW4uX29yaWdpbi5yb3RhdGUsCiAgICAgICAgdGV4dDogY2ZnLm9yaWdpbi5fb3JpZ2luLnRleHQsCiAgICAgICAgdGV4dEFsaWduOiAnY2VudGVyJywKICAgICAgICBmb250RmFtaWx5OiBjZmcub3JpZ2luLl9vcmlnaW4uZm9udCwKICAgICAgICBmaWxsOiBjZmcuY29sb3IsCiAgICAgICAgdGV4dEJhc2VsaW5lOiAnQWxwaGFiZXRpYycKICAgICAgfSwgY2ZnLnN0eWxlLCB7CiAgICAgICAgeDogY2ZnLngsCiAgICAgICAgeTogY2ZnLnkKICAgICAgfSkKICAgIH0pOwogIH0KfSk7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnVGFnQ2xvdWQnLAogIHByb3BzOiB7CiAgICB0YWdMaXN0OiB7CiAgICAgIHR5cGU6IEFycmF5LAogICAgICByZXF1aXJlZDogdHJ1ZQogICAgfSwKICAgIGhlaWdodDogewogICAgICB0eXBlOiBOdW1iZXIsCiAgICAgIGRlZmF1bHQ6IDQwMAogICAgfSwKICAgIHdpZHRoOiB7CiAgICAgIHR5cGU6IE51bWJlciwKICAgICAgZGVmYXVsdDogNjQwCiAgICB9CiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgZGF0YTogW10sCiAgICAgIHNjYWxlOiBzY2FsZQogICAgfTsKICB9LAogIHdhdGNoOiB7CiAgICB0YWdMaXN0OiBmdW5jdGlvbiB0YWdMaXN0KHZhbCkgewogICAgICBpZiAodmFsLmxlbmd0aCA+IDApIHsKICAgICAgICB0aGlzLmluaXRUYWdDbG91ZCh2YWwpOwogICAgICB9CiAgICB9CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgaWYgKHRoaXMudGFnTGlzdC5sZW5ndGggPiAwKSB7CiAgICAgIHRoaXMuaW5pdFRhZ0Nsb3VkKHRoaXMudGFnTGlzdCk7CiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICBpbml0VGFnQ2xvdWQ6IGZ1bmN0aW9uIGluaXRUYWdDbG91ZChkYXRhU291cmNlKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICB2YXIgaGVpZ2h0ID0gdGhpcy5oZWlnaHQsCiAgICAgICAgICB3aWR0aCA9IHRoaXMud2lkdGg7CiAgICAgIHZhciBkdiA9IG5ldyBEYXRhU2V0LlZpZXcoKS5zb3VyY2UoZGF0YVNvdXJjZSk7CiAgICAgIHZhciByYW5nZSA9IGR2LnJhbmdlKCd2YWx1ZScpOwogICAgICB2YXIgbWluID0gcmFuZ2VbMF07CiAgICAgIHZhciBtYXggPSByYW5nZVsxXTsKICAgICAgdmFyIGltYWdlTWFzayA9IG5ldyBJbWFnZSgpOwogICAgICBpbWFnZU1hc2suY3Jvc3NPcmlnaW4gPSAnJzsKICAgICAgaW1hZ2VNYXNrLnNyYyA9IGltZ1VybDsKCiAgICAgIGltYWdlTWFzay5vbmxvYWQgPSBmdW5jdGlvbiAoKSB7CiAgICAgICAgZHYudHJhbnNmb3JtKHsKICAgICAgICAgIHR5cGU6ICd0YWctY2xvdWQnLAogICAgICAgICAgZmllbGRzOiBbJ25hbWUnLCAndmFsdWUnXSwKICAgICAgICAgIHNpemU6IFt3aWR0aCwgaGVpZ2h0XSwKICAgICAgICAgIGltYWdlTWFzazogaW1hZ2VNYXNrLAogICAgICAgICAgZm9udDogJ1ZlcmRhbmEnLAogICAgICAgICAgcGFkZGluZzogMCwKICAgICAgICAgIHRpbWVJbnRlcnZhbDogNTAwMCwKICAgICAgICAgIC8vIG1heCBleGVjdXRlIHRpbWUKICAgICAgICAgIHJvdGF0ZTogZnVuY3Rpb24gcm90YXRlKCkgewogICAgICAgICAgICB2YXIgcmFuZG9tID0gfn4oTWF0aC5yYW5kb20oKSAqIDQpICUgNDsKCiAgICAgICAgICAgIGlmIChyYW5kb20gPT09IDIpIHsKICAgICAgICAgICAgICByYW5kb20gPSAwOwogICAgICAgICAgICB9CgogICAgICAgICAgICByZXR1cm4gcmFuZG9tICogOTA7IC8vIDAsIDkwLCAyNzAKICAgICAgICAgIH0sCiAgICAgICAgICBmb250U2l6ZTogZnVuY3Rpb24gZm9udFNpemUoZCkgewogICAgICAgICAgICBpZiAoZC52YWx1ZSkgewogICAgICAgICAgICAgIHJldHVybiAoZC52YWx1ZSAtIG1pbikgLyAobWF4IC0gbWluKSAqICgzMiAtIDgpICsgODsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgcmV0dXJuIDA7CiAgICAgICAgICB9CiAgICAgICAgfSk7CiAgICAgICAgX3RoaXMuZGF0YSA9IGR2LnJvd3M7CiAgICAgIH07CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["TagCloud.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <v-chart :width=\"width\" :height=\"height\" :padding=\"[0]\" :data=\"data\" :scale=\"scale\">\r\n    <v-tooltip :show-title=\"false\" />\r\n    <v-coord type=\"rect\" direction=\"TL\" />\r\n    <v-point position=\"x*y\" color=\"category\" shape=\"cloud\" tooltip=\"value*category\" />\r\n  </v-chart>\r\n</template>\r\n\r\n<script>\r\nimport { registerShape } from 'viser-vue'\r\nconst DataSet = require('@antv/data-set')\r\n\r\nconst imgUrl = 'https://gw.alipayobjects.com/zos/rmsportal/gWyeGLCdFFRavBGIDzWk.png'\r\n\r\nconst scale = [\r\n  { dataKey: 'x', nice: false },\r\n  { dataKey: 'y', nice: false }\r\n]\r\n\r\nregisterShape('point', 'cloud', {\r\n  draw (cfg, container) {\r\n    return container.addShape('text', {\r\n      attrs: {\r\n        fillOpacity: cfg.opacity,\r\n        fontSize: cfg.origin._origin.size,\r\n        rotate: cfg.origin._origin.rotate,\r\n        text: cfg.origin._origin.text,\r\n        textAlign: 'center',\r\n        fontFamily: cfg.origin._origin.font,\r\n        fill: cfg.color,\r\n        textBaseline: 'Alphabetic',\r\n        ...cfg.style,\r\n        x: cfg.x,\r\n        y: cfg.y\r\n      }\r\n    })\r\n  }\r\n})\r\n\r\nexport default {\r\n  name: 'TagCloud',\r\n  props: {\r\n    tagList: {\r\n      type: Array,\r\n      required: true\r\n    },\r\n    height: {\r\n      type: Number,\r\n      default: 400\r\n    },\r\n    width: {\r\n      type: Number,\r\n      default: 640\r\n    }\r\n  },\r\n  data () {\r\n    return {\r\n      data: [],\r\n      scale\r\n    }\r\n  },\r\n  watch: {\r\n    tagList: function (val) {\r\n      if (val.length > 0) {\r\n        this.initTagCloud(val)\r\n      }\r\n    }\r\n  },\r\n  mounted () {\r\n    if (this.tagList.length > 0) {\r\n      this.initTagCloud(this.tagList)\r\n    }\r\n  },\r\n  methods: {\r\n    initTagCloud (dataSource) {\r\n      const { height, width } = this\r\n\r\n      const dv = new DataSet.View().source(dataSource)\r\n      const range = dv.range('value')\r\n      const min = range[0]\r\n      const max = range[1]\r\n      const imageMask = new Image()\r\n      imageMask.crossOrigin = ''\r\n      imageMask.src = imgUrl\r\n      imageMask.onload = () => {\r\n        dv.transform({\r\n          type: 'tag-cloud',\r\n          fields: ['name', 'value'],\r\n          size: [width, height],\r\n          imageMask,\r\n          font: 'Verdana',\r\n          padding: 0,\r\n          timeInterval: 5000, // max execute time\r\n          rotate () {\r\n            let random = ~~(Math.random() * 4) % 4\r\n            if (random === 2) {\r\n              random = 0\r\n            }\r\n            return random * 90 // 0, 90, 270\r\n          },\r\n          fontSize (d) {\r\n            if (d.value) {\r\n              return ((d.value - min) / (max - min)) * (32 - 8) + 8\r\n            }\r\n            return 0\r\n          }\r\n        })\r\n        this.data = dv.rows\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n"],"sourceRoot":"src/components/Charts"}]}