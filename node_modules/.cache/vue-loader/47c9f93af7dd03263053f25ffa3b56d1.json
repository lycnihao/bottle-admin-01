{"remainingRequest":"F:\\个人git项目\\couldr-user\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\个人git项目\\couldr-user\\src\\components\\Upload\\FilePondUpload.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\个人git项目\\couldr-user\\src\\components\\Upload\\FilePondUpload.vue","mtime":1584361265564},{"path":"F:\\个人git项目\\couldr-user\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\个人git项目\\couldr-user\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"F:\\个人git项目\\couldr-user\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\个人git项目\\couldr-user\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgeyBtYXBHZXR0ZXJzIH0gZnJvbSAndnVleCcNCmltcG9ydCBheGlvcyBmcm9tICdheGlvcycNCg0KaW1wb3J0IHZ1ZUZpbGVQb25kIGZyb20gJ3Z1ZS1maWxlcG9uZCcNCmltcG9ydCAnZmlsZXBvbmQvZGlzdC9maWxlcG9uZC5taW4uY3NzJw0KDQovLyBQbHVnaW5zDQppbXBvcnQgRmlsZVBvbmRQbHVnaW5JbWFnZVByZXZpZXcgZnJvbSAnZmlsZXBvbmQtcGx1Z2luLWltYWdlLXByZXZpZXcnDQppbXBvcnQgJ2ZpbGVwb25kLXBsdWdpbi1pbWFnZS1wcmV2aWV3L2Rpc3QvZmlsZXBvbmQtcGx1Z2luLWltYWdlLXByZXZpZXcubWluLmNzcycNCg0KLy8gQ3JlYXRlIGNvbXBvbmVudCBhbmQgcmVnaXN0IHBsdWdpbnMNCmNvbnN0IEZpbGVQb25kID0gdnVlRmlsZVBvbmQoRmlsZVBvbmRQbHVnaW5JbWFnZVByZXZpZXcpDQpleHBvcnQgZGVmYXVsdCB7DQogIG5hbWU6ICdGaWxlUG9uZFVwbG9hZCcsDQogIGNvbXBvbmVudHM6IHsNCiAgICBGaWxlUG9uZA0KICB9LA0KICBwcm9wczogew0KICAgIG5hbWU6IHsNCiAgICAgIHR5cGU6IFN0cmluZywNCiAgICAgIHJlcXVpcmVkOiBmYWxzZSwNCiAgICAgIGRlZmF1bHQ6ICdmaWxlJw0KICAgIH0sDQogICAgZmlsZWQ6IHsNCiAgICAgIHR5cGU6IFN0cmluZywNCiAgICAgIHJlcXVpcmVkOiBmYWxzZSwNCiAgICAgIGRlZmF1bHQ6ICcnDQogICAgfSwNCiAgICBtdWx0aXBsZTogew0KICAgICAgdHlwZTogQm9vbGVhbiwNCiAgICAgIHJlcXVpcmVkOiBmYWxzZSwNCiAgICAgIGRlZmF1bHQ6IHRydWUNCiAgICB9LA0KICAgIGFjY2VwdDogew0KICAgICAgdHlwZTogU3RyaW5nLA0KICAgICAgcmVxdWlyZWQ6IGZhbHNlLA0KICAgICAgZGVmYXVsdDogJycNCiAgICB9LA0KICAgIGxhYmVsOiB7DQogICAgICB0eXBlOiBTdHJpbmcsDQogICAgICByZXF1aXJlZDogZmFsc2UsDQogICAgICBkZWZhdWx0OiAn54K55Ye76YCJ5oup5paH5Lu25oiW5bCG5paH5Lu25ouW5ou95Yiw5q2k5aSEJw0KICAgIH0sDQogICAgdXBsb2FkSGFuZGxlcjogew0KICAgICAgdHlwZTogRnVuY3Rpb24sDQogICAgICByZXF1aXJlZDogdHJ1ZQ0KICAgIH0NCiAgfSwNCiAgZGF0YTogZnVuY3Rpb24oKSB7DQogICAgcmV0dXJuIHsNCiAgICAgIHNlcnZlcjogew0KICAgICAgICBwcm9jZXNzOiAoZmllbGROYW1lLCBmaWxlLCBtZXRhZGF0YSwgbG9hZCwgZXJyb3IsIHByb2dyZXNzLCBhYm9ydCkgPT4gew0KICAgICAgICAgIGNvbnN0IGZvcm1EYXRhID0gbmV3IEZvcm1EYXRhKCkNCiAgICAgICAgICBmb3JtRGF0YS5hcHBlbmQoZmllbGROYW1lLCBmaWxlLCBmaWxlLm5hbWUpDQoNCiAgICAgICAgICBjb25zdCBDYW5jZWxUb2tlbiA9IGF4aW9zLkNhbmNlbFRva2VuDQogICAgICAgICAgY29uc3Qgc291cmNlID0gQ2FuY2VsVG9rZW4uc291cmNlKCkNCg0KICAgICAgICAgIHRoaXMudXBsb2FkSGFuZGxlcigNCiAgICAgICAgICAgIGZvcm1EYXRhLA0KICAgICAgICAgICAgcHJvZ3Jlc3NFdmVudCA9PiB7DQogICAgICAgICAgICAgIGlmIChwcm9ncmVzc0V2ZW50LnRvdGFsID4gMCkgew0KICAgICAgICAgICAgICAgIHByb2dyZXNzKHByb2dyZXNzRXZlbnQubGVuZ3RoQ29tcHV0YWJsZSwgcHJvZ3Jlc3NFdmVudC5sb2FkZWQsIHByb2dyZXNzRXZlbnQudG90YWwpDQogICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0sDQogICAgICAgICAgICBzb3VyY2UudG9rZW4sDQogICAgICAgICAgICB0aGlzLmZpbGVkLA0KICAgICAgICAgICAgZmlsZQ0KICAgICAgICAgICkNCiAgICAgICAgICAgIC50aGVuKHJlc3BvbnNlID0+IHsNCiAgICAgICAgICAgICAgbG9hZChyZXNwb25zZSkNCiAgICAgICAgICAgICAgdGhpcy4kbG9nLmRlYnVnKCdVcGxvYWRlZCBzdWNjZXNzZnVsbHknLCByZXNwb25zZSkNCiAgICAgICAgICAgICAgdGhpcy4kZW1pdCgnc3VjY2VzcycsIHJlc3BvbnNlLCBmaWxlKQ0KICAgICAgICAgICAgfSkNCiAgICAgICAgICAgIC5jYXRjaChmYWlsdXJlID0+IHsNCiAgICAgICAgICAgICAgdGhpcy4kbG9nLmRlYnVnKCdGYWlsZWQgdG8gdXBsb2FkIGZpbGUnLCBmYWlsdXJlKQ0KICAgICAgICAgICAgICB0aGlzLiRlbWl0KCdmYWlsdXJlJywgZmFpbHVyZSwgZmlsZSkNCiAgICAgICAgICAgICAgZXJyb3IoKQ0KICAgICAgICAgICAgfSkNCiAgICAgICAgICByZXR1cm4gew0KICAgICAgICAgICAgYWJvcnQ6ICgpID0+IHsNCiAgICAgICAgICAgICAgYWJvcnQoKQ0KICAgICAgICAgICAgICB0aGlzLiRsb2cuZGVidWcoJ1VwbG9hZCBvcGVyYXRpb24gYWJvcnRlZCBieSB0aGUgdXNlcicpDQogICAgICAgICAgICAgIHNvdXJjZS5jYW5jZWwoJ1VwbG9hZCBvcGVyYXRpb24gY2FuY2VsZWQgYnkgdGhlIHVzZXIuJykNCiAgICAgICAgICAgIH0NCiAgICAgICAgICB9DQogICAgICAgIH0NCiAgICAgIH0sDQogICAgICBmaWxlTGlzdDogW10NCiAgICB9DQogIH0sDQogIGNvbXB1dGVkOiB7DQogICAgLi4ubWFwR2V0dGVycyhbJ29wdGlvbnMnXSkNCiAgfSwNCiAgbWV0aG9kczogew0KICAgIGhhbmRsZUZpbGVQb25kSW5pdCgpIHsNCiAgICAgIHRoaXMuJGxvZy5kZWJ1ZygnRmlsZVBvbmQgaGFzIGluaXRpYWxpemVkJykNCiAgICB9LA0KICAgIGhhbmRsZUNsZWFyRmlsZUxpc3QoKSB7DQogICAgICB0aGlzLiRyZWZzLnBvbmQucmVtb3ZlRmlsZXMoKQ0KICAgIH0NCiAgfQ0KfQ0K"},{"version":3,"sources":["FilePondUpload.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"FilePondUpload.vue","sourceRoot":"src/components/Upload","sourcesContent":["<template>\r\n  <div>\r\n    <file-pond\r\n      ref=\"pond\"\r\n      :label-idle=\"label\"\r\n      :name=\"name\"\r\n      :allow-multiple=\"multiple\"\r\n      :allowRevert=\"false\"\r\n      :accepted-file-types=\"accept\"\r\n      :maxParallelUploads=\"options.attachment_upload_max_parallel_uploads\"\r\n      :allowImagePreview=\"options.attachment_upload_image_preview_enable\"\r\n      :maxFiles=\"options.attachment_upload_max_files\"\r\n      labelFileProcessing=\"上传中\"\r\n      labelFileProcessingComplete=\"上传完成\"\r\n      labelFileProcessingAborted=\"取消上传\"\r\n      labelFileProcessingError=\"上传错误\"\r\n      labelTapToCancel=\"点击取消\"\r\n      labelTapToRetry=\"点击重试\"\r\n      :files=\"fileList\"\r\n      :server=\"server\"\r\n      @init=\"handleFilePondInit\"\r\n    >\r\n    </file-pond>\r\n  </div>\r\n</template>\r\n<script>\r\nimport { mapGetters } from 'vuex'\r\nimport axios from 'axios'\r\n\r\nimport vueFilePond from 'vue-filepond'\r\nimport 'filepond/dist/filepond.min.css'\r\n\r\n// Plugins\r\nimport FilePondPluginImagePreview from 'filepond-plugin-image-preview'\r\nimport 'filepond-plugin-image-preview/dist/filepond-plugin-image-preview.min.css'\r\n\r\n// Create component and regist plugins\r\nconst FilePond = vueFilePond(FilePondPluginImagePreview)\r\nexport default {\r\n  name: 'FilePondUpload',\r\n  components: {\r\n    FilePond\r\n  },\r\n  props: {\r\n    name: {\r\n      type: String,\r\n      required: false,\r\n      default: 'file'\r\n    },\r\n    filed: {\r\n      type: String,\r\n      required: false,\r\n      default: ''\r\n    },\r\n    multiple: {\r\n      type: Boolean,\r\n      required: false,\r\n      default: true\r\n    },\r\n    accept: {\r\n      type: String,\r\n      required: false,\r\n      default: ''\r\n    },\r\n    label: {\r\n      type: String,\r\n      required: false,\r\n      default: '点击选择文件或将文件拖拽到此处'\r\n    },\r\n    uploadHandler: {\r\n      type: Function,\r\n      required: true\r\n    }\r\n  },\r\n  data: function() {\r\n    return {\r\n      server: {\r\n        process: (fieldName, file, metadata, load, error, progress, abort) => {\r\n          const formData = new FormData()\r\n          formData.append(fieldName, file, file.name)\r\n\r\n          const CancelToken = axios.CancelToken\r\n          const source = CancelToken.source()\r\n\r\n          this.uploadHandler(\r\n            formData,\r\n            progressEvent => {\r\n              if (progressEvent.total > 0) {\r\n                progress(progressEvent.lengthComputable, progressEvent.loaded, progressEvent.total)\r\n              }\r\n            },\r\n            source.token,\r\n            this.filed,\r\n            file\r\n          )\r\n            .then(response => {\r\n              load(response)\r\n              this.$log.debug('Uploaded successfully', response)\r\n              this.$emit('success', response, file)\r\n            })\r\n            .catch(failure => {\r\n              this.$log.debug('Failed to upload file', failure)\r\n              this.$emit('failure', failure, file)\r\n              error()\r\n            })\r\n          return {\r\n            abort: () => {\r\n              abort()\r\n              this.$log.debug('Upload operation aborted by the user')\r\n              source.cancel('Upload operation canceled by the user.')\r\n            }\r\n          }\r\n        }\r\n      },\r\n      fileList: []\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapGetters(['options'])\r\n  },\r\n  methods: {\r\n    handleFilePondInit() {\r\n      this.$log.debug('FilePond has initialized')\r\n    },\r\n    handleClearFileList() {\r\n      this.$refs.pond.removeFiles()\r\n    }\r\n  }\r\n}\r\n</script>\r\n<style lang=\"less\" scoped>\r\n</style>\r\n"]}]}