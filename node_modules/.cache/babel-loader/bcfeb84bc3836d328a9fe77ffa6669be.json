{"remainingRequest":"F:\\个人git项目\\couldr-user\\node_modules\\babel-loader\\lib\\index.js!F:\\个人git项目\\couldr-user\\node_modules\\eslint-loader\\index.js??ref--13-0!F:\\个人git项目\\couldr-user\\src\\mock\\services\\manage.js","dependencies":[{"path":"F:\\个人git项目\\couldr-user\\src\\mock\\services\\manage.js","mtime":1584009369870},{"path":"F:\\个人git项目\\couldr-user\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\个人git项目\\couldr-user\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"F:\\个人git项目\\couldr-user\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IE1vY2sgZnJvbSAnbW9ja2pzMic7CmltcG9ydCB7IGJ1aWxkZXIsIGdldFF1ZXJ5UGFyYW1ldGVycyB9IGZyb20gJy4uL3V0aWwnOwp2YXIgdG90YWxDb3VudCA9IDU3MDE7Cgp2YXIgc2VydmVyTGlzdCA9IGZ1bmN0aW9uIHNlcnZlckxpc3Qob3B0aW9ucykgewogIHZhciBwYXJhbWV0ZXJzID0gZ2V0UXVlcnlQYXJhbWV0ZXJzKG9wdGlvbnMpOwogIHZhciByZXN1bHQgPSBbXTsKICB2YXIgcGFnZU5vID0gcGFyc2VJbnQocGFyYW1ldGVycy5wYWdlTm8pOwogIHZhciBwYWdlU2l6ZSA9IHBhcnNlSW50KHBhcmFtZXRlcnMucGFnZVNpemUpOwogIHZhciB0b3RhbFBhZ2UgPSBNYXRoLmNlaWwodG90YWxDb3VudCAvIHBhZ2VTaXplKTsKICB2YXIga2V5ID0gKHBhZ2VObyAtIDEpICogcGFnZVNpemU7CiAgdmFyIG5leHQgPSAocGFnZU5vID49IHRvdGFsUGFnZSA/IHRvdGFsQ291bnQgJSBwYWdlU2l6ZSA6IHBhZ2VTaXplKSArIDE7CgogIGZvciAodmFyIGkgPSAxOyBpIDwgbmV4dDsgaSsrKSB7CiAgICB2YXIgdG1wS2V5ID0ga2V5ICsgaTsKICAgIHJlc3VsdC5wdXNoKHsKICAgICAga2V5OiB0bXBLZXksCiAgICAgIGlkOiB0bXBLZXksCiAgICAgIG5vOiAnTm8gJyArIHRtcEtleSwKICAgICAgZGVzY3JpcHRpb246ICfov5nmmK/kuIDmrrXmj4/ov7AnLAogICAgICBjYWxsTm86IE1vY2subW9jaygnQGludGVnZXIoMSwgOTk5KScpLAogICAgICBzdGF0dXM6IE1vY2subW9jaygnQGludGVnZXIoMCwgMyknKSwKICAgICAgdXBkYXRlZEF0OiBNb2NrLm1vY2soJ0BkYXRldGltZScpLAogICAgICBlZGl0YWJsZTogZmFsc2UKICAgIH0pOwogIH0KCiAgcmV0dXJuIGJ1aWxkZXIoewogICAgcGFnZVNpemU6IHBhZ2VTaXplLAogICAgcGFnZU5vOiBwYWdlTm8sCiAgICB0b3RhbENvdW50OiB0b3RhbENvdW50LAogICAgdG90YWxQYWdlOiB0b3RhbFBhZ2UsCiAgICBkYXRhOiByZXN1bHQKICB9KTsKfTsKCnZhciBmaWxlTGlzdCA9IGZ1bmN0aW9uIGZpbGVMaXN0KG9wdGlvbnMpIHsKICB2YXIgcmVzdWx0ID0gW107CgogIGZvciAodmFyIGkgPSAxOyBpIDwgNTA7IGkrKykgewogICAgdmFyIHRtcEtleSA9IGk7CiAgICByZXN1bHQucHVzaCh7CiAgICAgIGtleTogdG1wS2V5LAogICAgICBpZDogdG1wS2V5LAogICAgICBmaWxlTmFtZTogJ+aWsOW7uuaWh+S7ticgKyB0bXBLZXksCiAgICAgIGZpbGVTaXplOiB0bXBLZXkgKiA1ICsgJ0tCJywKICAgICAgY3JlYXRlQXQ6IE1vY2subW9jaygnQGRhdGV0aW1lJyksCiAgICAgIHVwZGF0ZWRBdDogTW9jay5tb2NrKCdAZGF0ZXRpbWUnKSwKICAgICAgZWRpdGFibGU6IGZhbHNlCiAgICB9KTsKICB9CgogIHJldHVybiByZXN1bHQ7Cn07CgpNb2NrLm1vY2soL1wvc2VydmljZS8sICdnZXQnLCBzZXJ2ZXJMaXN0KTsKTW9jay5tb2NrKC9cL2ZpbGVMaXN0LywgJ2dldCcsIGZpbGVMaXN0KTs="},{"version":3,"sources":["F:/个人git项目/couldr-user/src/mock/services/manage.js"],"names":["Mock","builder","getQueryParameters","totalCount","serverList","options","parameters","result","pageNo","parseInt","pageSize","totalPage","Math","ceil","key","next","i","tmpKey","push","id","no","description","callNo","mock","status","updatedAt","editable","data","fileList","fileName","fileSize","createAt"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,SAAjB;AACA,SAASC,OAAT,EAAkBC,kBAAlB,QAA4C,SAA5C;AAEA,IAAMC,UAAU,GAAG,IAAnB;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,OAAD,EAAa;AAC9B,MAAMC,UAAU,GAAGJ,kBAAkB,CAACG,OAAD,CAArC;AAEA,MAAME,MAAM,GAAG,EAAf;AACA,MAAMC,MAAM,GAAGC,QAAQ,CAACH,UAAU,CAACE,MAAZ,CAAvB;AACA,MAAME,QAAQ,GAAGD,QAAQ,CAACH,UAAU,CAACI,QAAZ,CAAzB;AACA,MAAMC,SAAS,GAAGC,IAAI,CAACC,IAAL,CAAUV,UAAU,GAAGO,QAAvB,CAAlB;AACA,MAAMI,GAAG,GAAG,CAACN,MAAM,GAAG,CAAV,IAAeE,QAA3B;AACA,MAAMK,IAAI,GAAG,CAACP,MAAM,IAAIG,SAAV,GAAuBR,UAAU,GAAGO,QAApC,GAAgDA,QAAjD,IAA6D,CAA1E;;AAEA,OAAK,IAAIM,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,IAApB,EAA0BC,CAAC,EAA3B,EAA+B;AAC7B,QAAMC,MAAM,GAAGH,GAAG,GAAGE,CAArB;AACAT,IAAAA,MAAM,CAACW,IAAP,CAAY;AACVJ,MAAAA,GAAG,EAAEG,MADK;AAEVE,MAAAA,EAAE,EAAEF,MAFM;AAGVG,MAAAA,EAAE,EAAE,QAAQH,MAHF;AAIVI,MAAAA,WAAW,EAAE,QAJH;AAKVC,MAAAA,MAAM,EAAEtB,IAAI,CAACuB,IAAL,CAAU,kBAAV,CALE;AAMVC,MAAAA,MAAM,EAAExB,IAAI,CAACuB,IAAL,CAAU,gBAAV,CANE;AAOVE,MAAAA,SAAS,EAAEzB,IAAI,CAACuB,IAAL,CAAU,WAAV,CAPD;AAQVG,MAAAA,QAAQ,EAAE;AARA,KAAZ;AAUD;;AAED,SAAOzB,OAAO,CAAC;AACbS,IAAAA,QAAQ,EAAEA,QADG;AAEbF,IAAAA,MAAM,EAAEA,MAFK;AAGbL,IAAAA,UAAU,EAAEA,UAHC;AAIbQ,IAAAA,SAAS,EAAEA,SAJE;AAKbgB,IAAAA,IAAI,EAAEpB;AALO,GAAD,CAAd;AAOD,CA/BD;;AAiCA,IAAMqB,QAAQ,GAAG,SAAXA,QAAW,CAACvB,OAAD,EAAa;AAC5B,MAAME,MAAM,GAAG,EAAf;;AACA,OAAK,IAAIS,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AAC3B,QAAMC,MAAM,GAAGD,CAAf;AACAT,IAAAA,MAAM,CAACW,IAAP,CAAY;AACVJ,MAAAA,GAAG,EAAEG,MADK;AAEVE,MAAAA,EAAE,EAAEF,MAFM;AAGVY,MAAAA,QAAQ,EAAE,SAASZ,MAHT;AAIba,MAAAA,QAAQ,EAAGb,MAAM,GAAG,CAAV,GAAe,IAJZ;AAKVc,MAAAA,QAAQ,EAAE/B,IAAI,CAACuB,IAAL,CAAU,WAAV,CALA;AAMVE,MAAAA,SAAS,EAAEzB,IAAI,CAACuB,IAAL,CAAU,WAAV,CAND;AAOVG,MAAAA,QAAQ,EAAE;AAPA,KAAZ;AASD;;AACD,SAAOnB,MAAP;AACD,CAfD;;AAmBAP,IAAI,CAACuB,IAAL,CAAU,WAAV,EAAuB,KAAvB,EAA8BnB,UAA9B;AACAJ,IAAI,CAACuB,IAAL,CAAU,YAAV,EAAwB,KAAxB,EAA+BK,QAA/B","sourcesContent":["import Mock from 'mockjs2'\r\nimport { builder, getQueryParameters } from '../util'\r\n\r\nconst totalCount = 5701\r\n\r\nconst serverList = (options) => {\r\n  const parameters = getQueryParameters(options)\r\n\r\n  const result = []\r\n  const pageNo = parseInt(parameters.pageNo)\r\n  const pageSize = parseInt(parameters.pageSize)\r\n  const totalPage = Math.ceil(totalCount / pageSize)\r\n  const key = (pageNo - 1) * pageSize\r\n  const next = (pageNo >= totalPage ? (totalCount % pageSize) : pageSize) + 1\r\n\r\n  for (let i = 1; i < next; i++) {\r\n    const tmpKey = key + i\r\n    result.push({\r\n      key: tmpKey,\r\n      id: tmpKey,\r\n      no: 'No ' + tmpKey,\r\n      description: '这是一段描述',\r\n      callNo: Mock.mock('@integer(1, 999)'),\r\n      status: Mock.mock('@integer(0, 3)'),\r\n      updatedAt: Mock.mock('@datetime'),\r\n      editable: false\r\n    })\r\n  }\r\n\r\n  return builder({\r\n    pageSize: pageSize,\r\n    pageNo: pageNo,\r\n    totalCount: totalCount,\r\n    totalPage: totalPage,\r\n    data: result\r\n  })\r\n}\r\n\r\nconst fileList = (options) => {\r\n  const result = []\r\n  for (let i = 1; i < 50; i++) {\r\n    const tmpKey = i\r\n    result.push({\r\n      key: tmpKey,\r\n      id: tmpKey,\r\n      fileName: '新建文件' + tmpKey,\r\n\t\t\tfileSize: (tmpKey * 5) + 'KB',\r\n      createAt: Mock.mock('@datetime'),\r\n      updatedAt: Mock.mock('@datetime'),\r\n      editable: false\r\n    })\r\n  }\r\n  return result\r\n}\r\n\r\n\r\n\r\nMock.mock(/\\/service/, 'get', serverList)\r\nMock.mock(/\\/fileList/, 'get', fileList)\r\n"]}]}