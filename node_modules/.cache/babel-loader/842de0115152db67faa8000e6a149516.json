{"remainingRequest":"F:\\个人git项目\\couldr-user\\node_modules\\babel-loader\\lib\\index.js!F:\\个人git项目\\couldr-user\\node_modules\\eslint-loader\\index.js??ref--13-0!F:\\个人git项目\\couldr-user\\src\\store\\modules\\option.js","dependencies":[{"path":"F:\\个人git项目\\couldr-user\\src\\store\\modules\\option.js","mtime":1583147575808},{"path":"F:\\个人git项目\\couldr-user\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\个人git项目\\couldr-user\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"F:\\个人git项目\\couldr-user\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCBWdWUgZnJvbSAndnVlJzsKaW1wb3J0IHsgT1BUSU9OUyB9IGZyb20gJ0Avc3RvcmUvbXV0YXRpb24tdHlwZXMnOwppbXBvcnQgb3B0aW9uQXBpIGZyb20gJ0AvYXBpL29wdGlvbic7CnZhciBrZXlzID0gWydibG9nX3VybCcsICdkZXZlbG9wZXJfbW9kZScsICdhdHRhY2htZW50X3VwbG9hZF9pbWFnZV9wcmV2aWV3X2VuYWJsZScsICdhdHRhY2htZW50X3VwbG9hZF9tYXhfcGFyYWxsZWxfdXBsb2FkcycsICdhdHRhY2htZW50X3VwbG9hZF9tYXhfZmlsZXMnLCAnc2hlZXRfcHJlZml4JywgJ3Bvc3RfcGVybWFsaW5rX3R5cGUnLCAnYXJjaGl2ZXNfcHJlZml4JywgJ3BhdGhfc3VmZml4JywgJ2RlZmF1bHRfZWRpdG9yJ107CnZhciBvcHRpb24gPSB7CiAgc3RhdGU6IHsKICAgIG9wdGlvbnM6IFtdCiAgfSwKICBtdXRhdGlvbnM6IHsKICAgIFNFVF9PUFRJT05TOiBmdW5jdGlvbiBTRVRfT1BUSU9OUyhzdGF0ZSwgb3B0aW9ucykgewogICAgICBWdWUubHMuc2V0KE9QVElPTlMsIG9wdGlvbnMpOwogICAgICBzdGF0ZS5vcHRpb25zID0gb3B0aW9uczsKICAgIH0KICB9LAogIGFjdGlvbnM6IHsKICAgIGxvYWRPcHRpb25zOiBmdW5jdGlvbiBsb2FkT3B0aW9ucyhfcmVmKSB7CiAgICAgIHZhciBjb21taXQgPSBfcmVmLmNvbW1pdDsKICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHsKICAgICAgICBvcHRpb25BcGkubGlzdEFsbChrZXlzKS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgICAgY29tbWl0KCdTRVRfT1BUSU9OUycsIHJlc3BvbnNlLmRhdGEuZGF0YSk7CiAgICAgICAgICByZXNvbHZlKHJlc3BvbnNlKTsKICAgICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyb3IpIHsKICAgICAgICAgIHJlamVjdChlcnJvcik7CiAgICAgICAgfSk7CiAgICAgIH0pOwogICAgfQogIH0KfTsKZXhwb3J0IGRlZmF1bHQgb3B0aW9uOw=="},{"version":3,"sources":["F:/个人git项目/couldr-user/src/store/modules/option.js"],"names":["Vue","OPTIONS","optionApi","keys","option","state","options","mutations","SET_OPTIONS","ls","set","actions","loadOptions","commit","Promise","resolve","reject","listAll","then","response","data","catch","error"],"mappings":";AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,SACEC,OADF,QAEO,wBAFP;AAGA,OAAOC,SAAP,MAAsB,cAAtB;AACA,IAAMC,IAAI,GAAG,CACX,UADW,EAEX,gBAFW,EAGX,wCAHW,EAIX,wCAJW,EAKX,6BALW,EAMX,cANW,EAOX,qBAPW,EAQX,iBARW,EASX,aATW,EAUX,gBAVW,CAAb;AAYA,IAAMC,MAAM,GAAG;AACbC,EAAAA,KAAK,EAAE;AACLC,IAAAA,OAAO,EAAE;AADJ,GADM;AAIbC,EAAAA,SAAS,EAAE;AACTC,IAAAA,WAAW,EAAE,qBAACH,KAAD,EAAQC,OAAR,EAAoB;AAC/BN,MAAAA,GAAG,CAACS,EAAJ,CAAOC,GAAP,CAAWT,OAAX,EAAoBK,OAApB;AACAD,MAAAA,KAAK,CAACC,OAAN,GAAgBA,OAAhB;AACD;AAJQ,GAJE;AAUbK,EAAAA,OAAO,EAAE;AACPC,IAAAA,WADO,6BAGJ;AAAA,UADDC,MACC,QADDA,MACC;AACD,aAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCd,QAAAA,SAAS,CACNe,OADH,CACWd,IADX,EAEGe,IAFH,CAEQ,UAAAC,QAAQ,EAAI;AAChBN,UAAAA,MAAM,CAAC,aAAD,EAAgBM,QAAQ,CAACC,IAAT,CAAcA,IAA9B,CAAN;AACAL,UAAAA,OAAO,CAACI,QAAD,CAAP;AACD,SALH,EAMGE,KANH,CAMS,UAAAC,KAAK,EAAI;AACdN,UAAAA,MAAM,CAACM,KAAD,CAAN;AACD,SARH;AASD,OAVM,CAAP;AAWD;AAfM;AAVI,CAAf;AA6BA,eAAelB,MAAf","sourcesContent":["import Vue from 'vue'\r\nimport {\r\n  OPTIONS\r\n} from '@/store/mutation-types'\r\nimport optionApi from '@/api/option'\r\nconst keys = [\r\n  'blog_url',\r\n  'developer_mode',\r\n  'attachment_upload_image_preview_enable',\r\n  'attachment_upload_max_parallel_uploads',\r\n  'attachment_upload_max_files',\r\n  'sheet_prefix',\r\n  'post_permalink_type',\r\n  'archives_prefix',\r\n  'path_suffix',\r\n  'default_editor'\r\n]\r\nconst option = {\r\n  state: {\r\n    options: []\r\n  },\r\n  mutations: {\r\n    SET_OPTIONS: (state, options) => {\r\n      Vue.ls.set(OPTIONS, options)\r\n      state.options = options\r\n    }\r\n  },\r\n  actions: {\r\n    loadOptions({\r\n      commit\r\n    }) {\r\n      return new Promise((resolve, reject) => {\r\n        optionApi\r\n          .listAll(keys)\r\n          .then(response => {\r\n            commit('SET_OPTIONS', response.data.data)\r\n            resolve(response)\r\n          })\r\n          .catch(error => {\r\n            reject(error)\r\n          })\r\n      })\r\n    }\r\n  }\r\n}\r\n\r\nexport default option\r\n"]}]}