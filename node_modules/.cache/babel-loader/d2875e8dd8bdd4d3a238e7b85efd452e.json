{"remainingRequest":"F:\\个人git项目\\squirrel-admin\\node_modules\\babel-loader\\lib\\index.js!F:\\个人git项目\\squirrel-admin\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!F:\\个人git项目\\squirrel-admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\个人git项目\\squirrel-admin\\src\\components\\Upload\\FilePondUpload.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\个人git项目\\squirrel-admin\\src\\components\\Upload\\FilePondUpload.vue","mtime":1586351603500},{"path":"F:\\个人git项目\\squirrel-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\个人git项目\\squirrel-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"F:\\个人git项目\\squirrel-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\个人git项目\\squirrel-admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZSI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7CmltcG9ydCB2dWVGaWxlUG9uZCBmcm9tICd2dWUtZmlsZXBvbmQnOwppbXBvcnQgJ2ZpbGVwb25kL2Rpc3QvZmlsZXBvbmQubWluLmNzcyc7IC8vIFBsdWdpbnMKCmltcG9ydCBGaWxlUG9uZFBsdWdpbkltYWdlUHJldmlldyBmcm9tICdmaWxlcG9uZC1wbHVnaW4taW1hZ2UtcHJldmlldyc7CmltcG9ydCAnZmlsZXBvbmQtcGx1Z2luLWltYWdlLXByZXZpZXcvZGlzdC9maWxlcG9uZC1wbHVnaW4taW1hZ2UtcHJldmlldy5taW4uY3NzJzsgLy8gQ3JlYXRlIGNvbXBvbmVudCBhbmQgcmVnaXN0IHBsdWdpbnMKCnZhciBGaWxlUG9uZCA9IHZ1ZUZpbGVQb25kKEZpbGVQb25kUGx1Z2luSW1hZ2VQcmV2aWV3KTsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdGaWxlUG9uZFVwbG9hZCcsCiAgY29tcG9uZW50czogewogICAgRmlsZVBvbmQ6IEZpbGVQb25kCiAgfSwKICBwcm9wczogewogICAgbmFtZTogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIHJlcXVpcmVkOiBmYWxzZSwKICAgICAgZGVmYXVsdDogJ2ZpbGUnCiAgICB9LAogICAgZmlsZWQ6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICByZXF1aXJlZDogZmFsc2UsCiAgICAgIGRlZmF1bHQ6ICcnCiAgICB9LAogICAgbXVsdGlwbGU6IHsKICAgICAgdHlwZTogQm9vbGVhbiwKICAgICAgcmVxdWlyZWQ6IGZhbHNlLAogICAgICBkZWZhdWx0OiB0cnVlCiAgICB9LAogICAgYWNjZXB0OiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgcmVxdWlyZWQ6IGZhbHNlLAogICAgICBkZWZhdWx0OiAnJwogICAgfSwKICAgIGxhYmVsOiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgcmVxdWlyZWQ6IGZhbHNlLAogICAgICBkZWZhdWx0OiAn54K55Ye76YCJ5oup5paH5Lu25oiW5bCG5paH5Lu25ouW5ou95Yiw5q2k5aSEJwogICAgfSwKICAgIHVwbG9hZEhhbmRsZXI6IHsKICAgICAgdHlwZTogRnVuY3Rpb24sCiAgICAgIHJlcXVpcmVkOiB0cnVlCiAgICB9LAogICAgcGF0aDogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIHJlcXVpcmVkOiBmYWxzZSwKICAgICAgZGVmYXVsdDogJ3Jvb3QnCiAgICB9CiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgdmFyIF90aGlzID0gdGhpczsKCiAgICByZXR1cm4gewogICAgICBzZXJ2ZXI6IHsKICAgICAgICBwcm9jZXNzOiBmdW5jdGlvbiBwcm9jZXNzKGZpZWxkTmFtZSwgZmlsZSwgbWV0YWRhdGEsIGxvYWQsIGVycm9yLCBwcm9ncmVzcywgX2Fib3J0KSB7CiAgICAgICAgICB2YXIgZm9ybURhdGEgPSBuZXcgRm9ybURhdGEoKTsKICAgICAgICAgIGZvcm1EYXRhLmFwcGVuZCgncGF0aCcsIF90aGlzLnBhdGgpOwogICAgICAgICAgZm9ybURhdGEuYXBwZW5kKGZpZWxkTmFtZSwgZmlsZSwgZmlsZS5uYW1lKTsKICAgICAgICAgIHZhciBDYW5jZWxUb2tlbiA9IGF4aW9zLkNhbmNlbFRva2VuOwogICAgICAgICAgdmFyIHNvdXJjZSA9IENhbmNlbFRva2VuLnNvdXJjZSgpOwoKICAgICAgICAgIF90aGlzLnVwbG9hZEhhbmRsZXIoZm9ybURhdGEsIGZ1bmN0aW9uIChwcm9ncmVzc0V2ZW50KSB7CiAgICAgICAgICAgIGlmIChwcm9ncmVzc0V2ZW50LnRvdGFsID4gMCkgewogICAgICAgICAgICAgIHByb2dyZXNzKHByb2dyZXNzRXZlbnQubGVuZ3RoQ29tcHV0YWJsZSwgcHJvZ3Jlc3NFdmVudC5sb2FkZWQsIHByb2dyZXNzRXZlbnQudG90YWwpOwogICAgICAgICAgICB9CiAgICAgICAgICB9LCBzb3VyY2UudG9rZW4sIF90aGlzLmZpbGVkLCBmaWxlKS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgICAgICBjb25zb2xlLmxvZygndGhlbicpOwogICAgICAgICAgICBsb2FkKHJlc3BvbnNlKTsKICAgICAgICAgICAgLyogdGhpcy4kbG9nLmRlYnVnKCdVcGxvYWRlZCBzdWNjZXNzZnVsbHknLCByZXNwb25zZSkgKi8KCiAgICAgICAgICAgIGNvbnNvbGUubG9nKCdVcGxvYWRlZCBzdWNjZXNzZnVsbHknICsgcmVzcG9uc2UpOwoKICAgICAgICAgICAgX3RoaXMuJGVtaXQoJ3N1Y2Nlc3MnLCByZXNwb25zZSwgZmlsZSk7CiAgICAgICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZmFpbHVyZSkgewogICAgICAgICAgICAvKiB0aGlzLiRsb2cuZGVidWcoJ0ZhaWxlZCB0byB1cGxvYWQgZmlsZScsIGZhaWx1cmUpICovCiAgICAgICAgICAgIGNvbnNvbGUubG9nKCdGYWlsZWQgdG8gdXBsb2FkIGZpbGUnICsgZmFpbHVyZSk7CgogICAgICAgICAgICBfdGhpcy4kZW1pdCgnZmFpbHVyZScsIGZhaWx1cmUsIGZpbGUpOwoKICAgICAgICAgICAgZXJyb3IoKTsKICAgICAgICAgIH0pOwoKICAgICAgICAgIHJldHVybiB7CiAgICAgICAgICAgIGFib3J0OiBmdW5jdGlvbiBhYm9ydCgpIHsKICAgICAgICAgICAgICBfYWJvcnQoKTsKICAgICAgICAgICAgICAvKiB0aGlzLiRsb2cuZGVidWcoJ1VwbG9hZCBvcGVyYXRpb24gYWJvcnRlZCBieSB0aGUgdXNlcicpICovCgoKICAgICAgICAgICAgICBjb25zb2xlLmxvZygnVXBsb2FkIG9wZXJhdGlvbiBhYm9ydGVkIGJ5IHRoZSB1c2VyJyk7CiAgICAgICAgICAgICAgc291cmNlLmNhbmNlbCgnVXBsb2FkIG9wZXJhdGlvbiBjYW5jZWxlZCBieSB0aGUgdXNlci4nKTsKICAgICAgICAgICAgfQogICAgICAgICAgfTsKICAgICAgICB9CiAgICAgIH0sCiAgICAgIGZpbGVMaXN0OiBbXSwKICAgICAgYXR0YWNobWVudF91cGxvYWRfbWF4X3BhcmFsbGVsX3VwbG9hZHM6ICcnLAogICAgICBhdHRhY2htZW50X3VwbG9hZF9pbWFnZV9wcmV2aWV3X2VuYWJsZTogJycsCiAgICAgIGF0dGFjaG1lbnRfdXBsb2FkX21heF9maWxlczogbnVsbAogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGhhbmRsZUZpbGVQb25kSW5pdDogZnVuY3Rpb24gaGFuZGxlRmlsZVBvbmRJbml0KCkgewogICAgICAvKiB0aGlzLiRsb2cuZGVidWcoJ0ZpbGVQb25kIGhhcyBpbml0aWFsaXplZCcpICovCiAgICAgIGNvbnNvbGUubG9nKCdGaWxlUG9uZCBoYXMgaW5pdGlhbGl6ZWQnKTsKICAgIH0sCiAgICBoYW5kbGVDbGVhckZpbGVMaXN0OiBmdW5jdGlvbiBoYW5kbGVDbGVhckZpbGVMaXN0KCkgewogICAgICB0aGlzLiRyZWZzLnBvbmQucmVtb3ZlRmlsZXMoKTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["FilePondUpload.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA,OAAA,KAAA,MAAA,OAAA;AAEA,OAAA,WAAA,MAAA,cAAA;AACA,OAAA,gCAAA,C,CAEA;;AACA,OAAA,0BAAA,MAAA,+BAAA;AACA,OAAA,0EAAA,C,CAEA;;AACA,IAAA,QAAA,GAAA,WAAA,CAAA,0BAAA,CAAA;AACA,eAAA;AACA,EAAA,IAAA,EAAA,gBADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,QAAA,EAAA;AADA,GAFA;AAKA,EAAA,KAAA,EAAA;AACA,IAAA,IAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,QAAA,EAAA,KAFA;AAGA,MAAA,OAAA,EAAA;AAHA,KADA;AAMA,IAAA,KAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,QAAA,EAAA,KAFA;AAGA,MAAA,OAAA,EAAA;AAHA,KANA;AAWA,IAAA,QAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,QAAA,EAAA,KAFA;AAGA,MAAA,OAAA,EAAA;AAHA,KAXA;AAgBA,IAAA,MAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,QAAA,EAAA,KAFA;AAGA,MAAA,OAAA,EAAA;AAHA,KAhBA;AAqBA,IAAA,KAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,QAAA,EAAA,KAFA;AAGA,MAAA,OAAA,EAAA;AAHA,KArBA;AA0BA,IAAA,aAAA,EAAA;AACA,MAAA,IAAA,EAAA,QADA;AAEA,MAAA,QAAA,EAAA;AAFA,KA1BA;AA8BA,IAAA,IAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,QAAA,EAAA,KAFA;AAGA,MAAA,OAAA,EAAA;AAHA;AA9BA,GALA;AAyCA,EAAA,IAAA,EAAA,gBAAA;AAAA;;AACA,WAAA;AACA,MAAA,MAAA,EAAA;AACA,QAAA,OAAA,EAAA,iBAAA,SAAA,EAAA,IAAA,EAAA,QAAA,EAAA,IAAA,EAAA,KAAA,EAAA,QAAA,EAAA,MAAA,EAAA;AACA,cAAA,QAAA,GAAA,IAAA,QAAA,EAAA;AACA,UAAA,QAAA,CAAA,MAAA,CAAA,MAAA,EAAA,KAAA,CAAA,IAAA;AACA,UAAA,QAAA,CAAA,MAAA,CAAA,SAAA,EAAA,IAAA,EAAA,IAAA,CAAA,IAAA;AACA,cAAA,WAAA,GAAA,KAAA,CAAA,WAAA;AACA,cAAA,MAAA,GAAA,WAAA,CAAA,MAAA,EAAA;;AACA,UAAA,KAAA,CAAA,aAAA,CACA,QADA,EAEA,UAAA,aAAA,EAAA;AACA,gBAAA,aAAA,CAAA,KAAA,GAAA,CAAA,EAAA;AACA,cAAA,QAAA,CAAA,aAAA,CAAA,gBAAA,EAAA,aAAA,CAAA,MAAA,EAAA,aAAA,CAAA,KAAA,CAAA;AACA;AACA,WANA,EAOA,MAAA,CAAA,KAPA,EAQA,KAAA,CAAA,KARA,EASA,IATA,EAWA,IAXA,CAWA,UAAA,QAAA,EAAA;AACA,YAAA,OAAA,CAAA,GAAA,CAAA,MAAA;AACA,YAAA,IAAA,CAAA,QAAA,CAAA;AACA;;AACA,YAAA,OAAA,CAAA,GAAA,CAAA,0BAAA,QAAA;;AACA,YAAA,KAAA,CAAA,KAAA,CAAA,SAAA,EAAA,QAAA,EAAA,IAAA;AACA,WAjBA,EAkBA,KAlBA,CAkBA,UAAA,OAAA,EAAA;AACA;AACA,YAAA,OAAA,CAAA,GAAA,CAAA,0BAAA,OAAA;;AACA,YAAA,KAAA,CAAA,KAAA,CAAA,SAAA,EAAA,OAAA,EAAA,IAAA;;AACA,YAAA,KAAA;AACA,WAvBA;;AAwBA,iBAAA;AACA,YAAA,KAAA,EAAA,iBAAA;AACA,cAAA,MAAA;AACA;;;AACA,cAAA,OAAA,CAAA,GAAA,CAAA,sCAAA;AACA,cAAA,MAAA,CAAA,MAAA,CAAA,wCAAA;AACA;AANA,WAAA;AAQA;AAvCA,OADA;AA0CA,MAAA,QAAA,EAAA,EA1CA;AA2CA,MAAA,sCAAA,EAAA,EA3CA;AA4CA,MAAA,sCAAA,EAAA,EA5CA;AA6CA,MAAA,2BAAA,EAAA;AA7CA,KAAA;AA+CA,GAzFA;AA0FA,EAAA,OAAA,EAAA;AACA,IAAA,kBADA,gCACA;AACA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,0BAAA;AACA,KAJA;AAKA,IAAA,mBALA,iCAKA;AACA,WAAA,KAAA,CAAA,IAAA,CAAA,WAAA;AACA;AAPA;AA1FA,CAAA","sourcesContent":["<template>\r\n  <div>\r\n    <file-pond\r\n      ref=\"pond\"\r\n      :label-idle=\"label\"\r\n      :name=\"name\"\r\n      :allow-multiple=\"multiple\"\r\n      :allowRevert=\"false\"\r\n      :accepted-file-types=\"accept\"\r\n      :maxParallelUploads=\"attachment_upload_max_parallel_uploads\"\r\n      :allowImagePreview=\"attachment_upload_image_preview_enable\"\r\n      :maxFiles=\"attachment_upload_max_files\"\r\n      labelFileProcessing=\"上传中\"\r\n      labelFileProcessingComplete=\"上传完成\"\r\n      labelFileProcessingAborted=\"取消上传\"\r\n      labelFileProcessingError=\"上传错误\"\r\n      labelTapToCancel=\"点击取消\"\r\n      labelTapToRetry=\"点击重试\"\r\n      :files=\"fileList\"\r\n      :server=\"server\"\r\n      @init=\"handleFilePondInit\"\r\n    >\r\n    </file-pond>\r\n  </div>\r\n</template>\r\n<script>\r\nimport axios from 'axios'\r\n\r\nimport vueFilePond from 'vue-filepond'\r\nimport 'filepond/dist/filepond.min.css'\r\n\r\n// Plugins\r\nimport FilePondPluginImagePreview from 'filepond-plugin-image-preview'\r\nimport 'filepond-plugin-image-preview/dist/filepond-plugin-image-preview.min.css'\r\n\r\n// Create component and regist plugins\r\nconst FilePond = vueFilePond(FilePondPluginImagePreview)\r\nexport default {\r\n  name: 'FilePondUpload',\r\n  components: {\r\n    FilePond\r\n  },\r\n  props: {\r\n    name: {\r\n      type: String,\r\n      required: false,\r\n      default: 'file'\r\n    },\r\n    filed: {\r\n      type: String,\r\n      required: false,\r\n      default: ''\r\n    },\r\n    multiple: {\r\n      type: Boolean,\r\n      required: false,\r\n      default: true\r\n    },\r\n    accept: {\r\n      type: String,\r\n      required: false,\r\n      default: ''\r\n    },\r\n    label: {\r\n      type: String,\r\n      required: false,\r\n      default: '点击选择文件或将文件拖拽到此处'\r\n    },\r\n    uploadHandler: {\r\n      type: Function,\r\n      required: true\r\n    },\r\n\t\tpath: {\r\n\t\t  type: String,\r\n\t\t  required: false,\r\n\t\t  default: 'root'\r\n\t\t}\r\n  },\r\n  data: function() {\r\n    return {\r\n      server: {\r\n        process: (fieldName, file, metadata, load, error, progress, abort) => {\r\n          const formData = new FormData()\r\n\t\t\t\t\tformData.append('path', this.path)\r\n          formData.append(fieldName, file, file.name)\r\n          const CancelToken = axios.CancelToken\r\n          const source = CancelToken.source()\r\n          this.uploadHandler(\r\n            formData,\r\n            progressEvent => {\r\n              if (progressEvent.total > 0) {\r\n                progress(progressEvent.lengthComputable, progressEvent.loaded, progressEvent.total)\r\n              }\r\n            },\r\n            source.token,\r\n            this.filed,\r\n            file\r\n          )\r\n            .then(response => {\r\n\t\t\t\t\t\t\tconsole.log('then')\r\n              load(response)\r\n              /* this.$log.debug('Uploaded successfully', response) */\r\n\t\t\t\t\t\t\tconsole.log('Uploaded successfully' + response)\r\n              this.$emit('success', response, file)\r\n            })\r\n            .catch(failure => {\r\n              /* this.$log.debug('Failed to upload file', failure) */\r\n\t\t\t\t\t\t\tconsole.log('Failed to upload file' + failure)\r\n              this.$emit('failure', failure, file)\r\n              error()\r\n            })\r\n          return {\r\n            abort: () => {\r\n              abort()\r\n              /* this.$log.debug('Upload operation aborted by the user') */\r\n\t\t\t\t\t\t\tconsole.log('Upload operation aborted by the user')\r\n              source.cancel('Upload operation canceled by the user.')\r\n            }\r\n          }\r\n        }\r\n      },\r\n      fileList: [],\r\n\t\t\tattachment_upload_max_parallel_uploads: '',\r\n\t\t\tattachment_upload_image_preview_enable: '',\r\n\t\t\tattachment_upload_max_files: null\r\n    }\r\n  },\r\n  methods: {\r\n    handleFilePondInit() {\r\n      /* this.$log.debug('FilePond has initialized') */\r\n\t\t\tconsole.log('FilePond has initialized')\r\n    },\r\n    handleClearFileList() {\r\n      this.$refs.pond.removeFiles()\r\n    }\r\n  }\r\n}\r\n</script>\r\n<style lang=\"less\" scoped>\r\n</style>\r\n"],"sourceRoot":"src/components/Upload"}]}