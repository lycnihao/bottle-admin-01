{"remainingRequest":"F:\\个人git项目\\squirrel-admin\\node_modules\\babel-loader\\lib\\index.js!F:\\个人git项目\\squirrel-admin\\node_modules\\eslint-loader\\index.js??ref--13-0!F:\\个人git项目\\squirrel-admin\\src\\mock\\util.js","dependencies":[{"path":"F:\\个人git项目\\squirrel-admin\\src\\mock\\util.js","mtime":1583417156407},{"path":"F:\\个人git项目\\squirrel-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\个人git项目\\squirrel-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"F:\\个人git项目\\squirrel-admin\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LmtleXMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAuZXhlYyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5yZXBsYWNlIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnNwbGl0IjsKaW1wb3J0IF90eXBlb2YgZnJvbSAiRjpcXFx1NEUyQVx1NEVCQWdpdFx1OTg3OVx1NzZFRVxcc3F1aXJyZWwtYWRtaW5cXG5vZGVfbW9kdWxlc1xcQGJhYmVsXFxydW50aW1lL2hlbHBlcnMvZXNtL3R5cGVvZiI7CnZhciByZXNwb25zZUJvZHkgPSB7CiAgbWVzc2FnZTogJycsCiAgdGltZXN0YW1wOiAwLAogIHJlc3VsdDogbnVsbCwKICBjb2RlOiAwCn07CmV4cG9ydCB2YXIgYnVpbGRlciA9IGZ1bmN0aW9uIGJ1aWxkZXIoZGF0YSwgbWVzc2FnZSkgewogIHZhciBjb2RlID0gYXJndW1lbnRzLmxlbmd0aCA+IDIgJiYgYXJndW1lbnRzWzJdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMl0gOiAwOwogIHZhciBoZWFkZXJzID0gYXJndW1lbnRzLmxlbmd0aCA+IDMgJiYgYXJndW1lbnRzWzNdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbM10gOiB7fTsKICByZXNwb25zZUJvZHkucmVzdWx0ID0gZGF0YTsKCiAgaWYgKG1lc3NhZ2UgIT09IHVuZGVmaW5lZCAmJiBtZXNzYWdlICE9PSBudWxsKSB7CiAgICByZXNwb25zZUJvZHkubWVzc2FnZSA9IG1lc3NhZ2U7CiAgfQoKICBpZiAoY29kZSAhPT0gdW5kZWZpbmVkICYmIGNvZGUgIT09IDApIHsKICAgIHJlc3BvbnNlQm9keS5jb2RlID0gY29kZTsKICAgIHJlc3BvbnNlQm9keS5fc3RhdHVzID0gY29kZTsKICB9CgogIGlmIChoZWFkZXJzICE9PSBudWxsICYmIF90eXBlb2YoaGVhZGVycykgPT09ICdvYmplY3QnICYmIE9iamVjdC5rZXlzKGhlYWRlcnMpLmxlbmd0aCA+IDApIHsKICAgIHJlc3BvbnNlQm9keS5faGVhZGVycyA9IGhlYWRlcnM7CiAgfQoKICByZXNwb25zZUJvZHkudGltZXN0YW1wID0gbmV3IERhdGUoKS5nZXRUaW1lKCk7CiAgcmV0dXJuIHJlc3BvbnNlQm9keTsKfTsKZXhwb3J0IHZhciBnZXRRdWVyeVBhcmFtZXRlcnMgPSBmdW5jdGlvbiBnZXRRdWVyeVBhcmFtZXRlcnMob3B0aW9ucykgewogIHZhciB1cmwgPSBvcHRpb25zLnVybDsKICB2YXIgc2VhcmNoID0gdXJsLnNwbGl0KCc/JylbMV07CgogIGlmICghc2VhcmNoKSB7CiAgICByZXR1cm4ge307CiAgfQoKICByZXR1cm4gSlNPTi5wYXJzZSgneyInICsgZGVjb2RlVVJJQ29tcG9uZW50KHNlYXJjaCkucmVwbGFjZSgvIi9nLCAnXFwiJykucmVwbGFjZSgvJi9nLCAnIiwiJykucmVwbGFjZSgvPS9nLCAnIjoiJykgKyAnIn0nKTsKfTsKZXhwb3J0IHZhciBnZXRCb2R5ID0gZnVuY3Rpb24gZ2V0Qm9keShvcHRpb25zKSB7CiAgcmV0dXJuIG9wdGlvbnMuYm9keSAmJiBKU09OLnBhcnNlKG9wdGlvbnMuYm9keSk7Cn07"},{"version":3,"sources":["F:/个人git项目/squirrel-admin/src/mock/util.js"],"names":["responseBody","message","timestamp","result","code","builder","data","headers","undefined","_status","Object","keys","length","_headers","Date","getTime","getQueryParameters","options","url","search","split","JSON","parse","decodeURIComponent","replace","getBody","body"],"mappings":";;;;;AAAA,IAAMA,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE,EADU;AAEnBC,EAAAA,SAAS,EAAE,CAFQ;AAGnBC,EAAAA,MAAM,EAAE,IAHW;AAInBC,EAAAA,IAAI,EAAE;AAJa,CAArB;AAOA,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,IAAD,EAAOL,OAAP,EAA2C;AAAA,MAA3BG,IAA2B,uEAApB,CAAoB;AAAA,MAAjBG,OAAiB,uEAAP,EAAO;AAChEP,EAAAA,YAAY,CAACG,MAAb,GAAsBG,IAAtB;;AACA,MAAIL,OAAO,KAAKO,SAAZ,IAAyBP,OAAO,KAAK,IAAzC,EAA+C;AAC7CD,IAAAA,YAAY,CAACC,OAAb,GAAuBA,OAAvB;AACD;;AACD,MAAIG,IAAI,KAAKI,SAAT,IAAsBJ,IAAI,KAAK,CAAnC,EAAsC;AACpCJ,IAAAA,YAAY,CAACI,IAAb,GAAoBA,IAApB;AACAJ,IAAAA,YAAY,CAACS,OAAb,GAAuBL,IAAvB;AACD;;AACD,MAAIG,OAAO,KAAK,IAAZ,IAAoB,QAAOA,OAAP,MAAmB,QAAvC,IAAmDG,MAAM,CAACC,IAAP,CAAYJ,OAAZ,EAAqBK,MAArB,GAA8B,CAArF,EAAwF;AACtFZ,IAAAA,YAAY,CAACa,QAAb,GAAwBN,OAAxB;AACD;;AACDP,EAAAA,YAAY,CAACE,SAAb,GAAyB,IAAIY,IAAJ,GAAWC,OAAX,EAAzB;AACA,SAAOf,YAAP;AACD,CAdM;AAgBP,OAAO,IAAMgB,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,OAAD,EAAa;AAC7C,MAAMC,GAAG,GAAGD,OAAO,CAACC,GAApB;AACA,MAAMC,MAAM,GAAGD,GAAG,CAACE,KAAJ,CAAU,GAAV,EAAe,CAAf,CAAf;;AACA,MAAI,CAACD,MAAL,EAAa;AACX,WAAO,EAAP;AACD;;AACD,SAAOE,IAAI,CAACC,KAAL,CAAW,OAAOC,kBAAkB,CAACJ,MAAD,CAAlB,CACtBK,OADsB,CACd,IADc,EACR,KADQ,EAEtBA,OAFsB,CAEd,IAFc,EAER,KAFQ,EAGtBA,OAHsB,CAGd,IAHc,EAGR,KAHQ,CAAP,GAGQ,IAHnB,CAAP;AAID,CAVM;AAYP,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACR,OAAD,EAAa;AAClC,SAAOA,OAAO,CAACS,IAAR,IAAgBL,IAAI,CAACC,KAAL,CAAWL,OAAO,CAACS,IAAnB,CAAvB;AACD,CAFM","sourcesContent":["const responseBody = {\r\n  message: '',\r\n  timestamp: 0,\r\n  result: null,\r\n  code: 0\r\n}\r\n\r\nexport const builder = (data, message, code = 0, headers = {}) => {\r\n  responseBody.result = data\r\n  if (message !== undefined && message !== null) {\r\n    responseBody.message = message\r\n  }\r\n  if (code !== undefined && code !== 0) {\r\n    responseBody.code = code\r\n    responseBody._status = code\r\n  }\r\n  if (headers !== null && typeof headers === 'object' && Object.keys(headers).length > 0) {\r\n    responseBody._headers = headers\r\n  }\r\n  responseBody.timestamp = new Date().getTime()\r\n  return responseBody\r\n}\r\n\r\nexport const getQueryParameters = (options) => {\r\n  const url = options.url\r\n  const search = url.split('?')[1]\r\n  if (!search) {\r\n    return {}\r\n  }\r\n  return JSON.parse('{\"' + decodeURIComponent(search)\r\n    .replace(/\"/g, '\\\\\"')\r\n    .replace(/&/g, '\",\"')\r\n    .replace(/=/g, '\":\"') + '\"}')\r\n}\r\n\r\nexport const getBody = (options) => {\r\n  return options.body && JSON.parse(options.body)\r\n}\r\n"]}]}